/* Kaleidoscope - Firmware for computer input devices
 * Copyright (C) 2013-2019  Keyboard.io, Inc.
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "kaleidoscope/host_keymap/linux.h"

// This file was autogenerated by host_keymap.
// Its content is based on information provided by the XKB X11 system
// collected with the extraordinary libxkbcommon.

// layout: lk
// variant: standard

#define _HOST_KEYMAP_ASCII(OP) \
   OP('\b', Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP('\t', Key_Tab) /* XKB_KEY_Tab */ \
   OP('\r', Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP('\e', Key_Escape) /* XKB_KEY_Escape */ \
   OP(' ', Key_Spacebar) /* U+0020, XKB_KEY_space, SPACE */ \
   OP('!', LSHIFT(Key_1)) /* U+0021, XKB_KEY_exclam, EXCLAMATION MARK */ \
   OP('"', LSHIFT(Key_Quote)) /* U+0022, XKB_KEY_quotedbl, QUOTATION MARK */ \
   OP('#', LSHIFT(Key_3)) /* U+0023, XKB_KEY_numbersign, NUMBER SIGN */ \
   OP('$', LSHIFT(Key_4)) /* U+0024, XKB_KEY_dollar, DOLLAR SIGN */ \
   OP('%', LSHIFT(Key_5)) /* U+0025, XKB_KEY_percent, PERCENT SIGN */ \
   OP('&', LSHIFT(Key_7)) /* U+0026, XKB_KEY_ampersand, AMPERSAND */ \
   OP('\'', Key_Quote) /* U+0027, XKB_KEY_apostrophe, APOSTROPHE */ \
   OP('(', LSHIFT(Key_9)) /* U+0028, XKB_KEY_parenleft, LEFT PARENTHESIS */ \
   OP(')', LSHIFT(Key_0)) /* U+0029, XKB_KEY_parenright, RIGHT PARENTHESIS */ \
   OP('*', Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP('+', Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(',', Key_Comma) /* U+002c, XKB_KEY_comma, COMMA */ \
   OP('-', Key_Minus) /* U+002d, XKB_KEY_minus, HYPHEN-MINUS */ \
   OP('.', Key_Period) /* U+002e, XKB_KEY_period, FULL STOP */ \
   OP('/', Key_Slash) /* U+002f, XKB_KEY_slash, SOLIDUS */ \
   OP('0', Key_0) /* U+0030, XKB_KEY_0, DIGIT ZERO */ \
   OP('1', Key_1) /* U+0031, XKB_KEY_1, DIGIT ONE */ \
   OP('2', Key_2) /* U+0032, XKB_KEY_2, DIGIT TWO */ \
   OP('3', Key_3) /* U+0033, XKB_KEY_3, DIGIT THREE */ \
   OP('4', Key_4) /* U+0034, XKB_KEY_4, DIGIT FOUR */ \
   OP('5', Key_5) /* U+0035, XKB_KEY_5, DIGIT FIVE */ \
   OP('6', Key_6) /* U+0036, XKB_KEY_6, DIGIT SIX */ \
   OP('7', Key_7) /* U+0037, XKB_KEY_7, DIGIT SEVEN */ \
   OP('8', Key_8) /* U+0038, XKB_KEY_8, DIGIT EIGHT */ \
   OP('9', Key_9) /* U+0039, XKB_KEY_9, DIGIT NINE */ \
   OP(':', LSHIFT(Key_Semicolon)) /* U+003a, XKB_KEY_colon, COLON */ \
   OP(';', Key_Semicolon) /* U+003b, XKB_KEY_semicolon, SEMICOLON */ \
   OP('<', Key_NonUsBackslashAndPipe) /* U+003c, XKB_KEY_less, LESS-THAN SIGN */ \
   OP('=', Key_Equals) /* U+003d, XKB_KEY_equal, EQUALS SIGN */ \
   OP('>', LSHIFT(Key_Period)) /* U+003e, XKB_KEY_greater, GREATER-THAN SIGN */ \
   OP('?', LSHIFT(Key_Slash)) /* U+003f, XKB_KEY_question, QUESTION MARK */ \
   OP('@', LSHIFT(Key_2)) /* U+0040, XKB_KEY_at, COMMERCIAL AT */ \
   OP('F', LSHIFT(Key_F)) /* U+0046, XKB_KEY_F, LATIN CAPITAL LETTER F */ \
   OP('V', LSHIFT(Key_V)) /* U+0056, XKB_KEY_V, LATIN CAPITAL LETTER V */ \
   OP('[', Key_LeftBracket) /* U+005b, XKB_KEY_bracketleft, LEFT SQUARE BRACKET */ \
   OP('\\', Key_NonUsPound) /* U+005c, XKB_KEY_backslash, REVERSE SOLIDUS */ \
   OP(']', Key_RightBracket) /* U+005d, XKB_KEY_bracketright, RIGHT SQUARE BRACKET */ \
   OP('^', LSHIFT(Key_6)) /* U+005e, XKB_KEY_asciicircum, CIRCUMFLEX ACCENT */ \
   OP('_', LSHIFT(Key_Minus)) /* U+005f, XKB_KEY_underscore, LOW LINE */ \
   OP('`', Key_Backtick) /* U+0060, XKB_KEY_grave, GRAVE ACCENT */ \
   OP('{', LSHIFT(Key_LeftBracket)) /* U+007b, XKB_KEY_braceleft, LEFT CURLY BRACKET */ \
   OP('|', LSHIFT(Key_NonUsPound)) /* U+007c, XKB_KEY_bar, VERTICAL LINE */ \
   OP('}', LSHIFT(Key_RightBracket)) /* U+007d, XKB_KEY_braceright, RIGHT CURLY BRACKET */ \
   OP('~', LSHIFT(Key_Backtick)) /* U+007e, XKB_KEY_asciitilde, TILDE */ \
   OP('', Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \

#define _HOST_KEYMAP_UNICODE(OP) \
   OP(L'\b', Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP(L'\t', Key_Tab) /* XKB_KEY_Tab */ \
   OP(L'\r', Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP(L'\e', Key_Escape) /* XKB_KEY_Escape */ \
   OP(L' ', Key_Spacebar) /* U+0020, XKB_KEY_space, SPACE */ \
   OP(L'!', LSHIFT(Key_1)) /* U+0021, XKB_KEY_exclam, EXCLAMATION MARK */ \
   OP(L'"', LSHIFT(Key_Quote)) /* U+0022, XKB_KEY_quotedbl, QUOTATION MARK */ \
   OP(L'#', LSHIFT(Key_3)) /* U+0023, XKB_KEY_numbersign, NUMBER SIGN */ \
   OP(L'$', LSHIFT(Key_4)) /* U+0024, XKB_KEY_dollar, DOLLAR SIGN */ \
   OP(L'%', LSHIFT(Key_5)) /* U+0025, XKB_KEY_percent, PERCENT SIGN */ \
   OP(L'&', LSHIFT(Key_7)) /* U+0026, XKB_KEY_ampersand, AMPERSAND */ \
   OP(L'\'', Key_Quote) /* U+0027, XKB_KEY_apostrophe, APOSTROPHE */ \
   OP(L'(', LSHIFT(Key_9)) /* U+0028, XKB_KEY_parenleft, LEFT PARENTHESIS */ \
   OP(L')', LSHIFT(Key_0)) /* U+0029, XKB_KEY_parenright, RIGHT PARENTHESIS */ \
   OP(L'*', Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP(L'+', Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(L',', Key_Comma) /* U+002c, XKB_KEY_comma, COMMA */ \
   OP(L'-', Key_Minus) /* U+002d, XKB_KEY_minus, HYPHEN-MINUS */ \
   OP(L'.', Key_Period) /* U+002e, XKB_KEY_period, FULL STOP */ \
   OP(L'/', Key_Slash) /* U+002f, XKB_KEY_slash, SOLIDUS */ \
   OP(L'0', Key_0) /* U+0030, XKB_KEY_0, DIGIT ZERO */ \
   OP(L'1', Key_1) /* U+0031, XKB_KEY_1, DIGIT ONE */ \
   OP(L'2', Key_2) /* U+0032, XKB_KEY_2, DIGIT TWO */ \
   OP(L'3', Key_3) /* U+0033, XKB_KEY_3, DIGIT THREE */ \
   OP(L'4', Key_4) /* U+0034, XKB_KEY_4, DIGIT FOUR */ \
   OP(L'5', Key_5) /* U+0035, XKB_KEY_5, DIGIT FIVE */ \
   OP(L'6', Key_6) /* U+0036, XKB_KEY_6, DIGIT SIX */ \
   OP(L'7', Key_7) /* U+0037, XKB_KEY_7, DIGIT SEVEN */ \
   OP(L'8', Key_8) /* U+0038, XKB_KEY_8, DIGIT EIGHT */ \
   OP(L'9', Key_9) /* U+0039, XKB_KEY_9, DIGIT NINE */ \
   OP(L':', LSHIFT(Key_Semicolon)) /* U+003a, XKB_KEY_colon, COLON */ \
   OP(L';', Key_Semicolon) /* U+003b, XKB_KEY_semicolon, SEMICOLON */ \
   OP(L'<', Key_NonUsBackslashAndPipe) /* U+003c, XKB_KEY_less, LESS-THAN SIGN */ \
   OP(L'=', Key_Equals) /* U+003d, XKB_KEY_equal, EQUALS SIGN */ \
   OP(L'>', LSHIFT(Key_Period)) /* U+003e, XKB_KEY_greater, GREATER-THAN SIGN */ \
   OP(L'?', LSHIFT(Key_Slash)) /* U+003f, XKB_KEY_question, QUESTION MARK */ \
   OP(L'@', LSHIFT(Key_2)) /* U+0040, XKB_KEY_at, COMMERCIAL AT */ \
   OP(L'F', LSHIFT(Key_F)) /* U+0046, XKB_KEY_F, LATIN CAPITAL LETTER F */ \
   OP(L'V', LSHIFT(Key_V)) /* U+0056, XKB_KEY_V, LATIN CAPITAL LETTER V */ \
   OP(L'[', Key_LeftBracket) /* U+005b, XKB_KEY_bracketleft, LEFT SQUARE BRACKET */ \
   OP(L'\\', Key_NonUsPound) /* U+005c, XKB_KEY_backslash, REVERSE SOLIDUS */ \
   OP(L']', Key_RightBracket) /* U+005d, XKB_KEY_bracketright, RIGHT SQUARE BRACKET */ \
   OP(L'^', LSHIFT(Key_6)) /* U+005e, XKB_KEY_asciicircum, CIRCUMFLEX ACCENT */ \
   OP(L'_', LSHIFT(Key_Minus)) /* U+005f, XKB_KEY_underscore, LOW LINE */ \
   OP(L'`', Key_Backtick) /* U+0060, XKB_KEY_grave, GRAVE ACCENT */ \
   OP(L'{', LSHIFT(Key_LeftBracket)) /* U+007b, XKB_KEY_braceleft, LEFT CURLY BRACKET */ \
   OP(L'|', LSHIFT(Key_NonUsPound)) /* U+007c, XKB_KEY_bar, VERTICAL LINE */ \
   OP(L'}', LSHIFT(Key_RightBracket)) /* U+007d, XKB_KEY_braceright, RIGHT CURLY BRACKET */ \
   OP(L'~', LSHIFT(Key_Backtick)) /* U+007e, XKB_KEY_asciitilde, TILDE */ \
   OP(L'', Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \
   OP(L' ', LSHIFT(Key_Spacebar)) /* U+00a0, XKB_KEY_nobreakspace, NO-BREAK SPACE */ \
   OP(L'¦', RALT(LSHIFT(Key_NonUsBackslashAndPipe))) /* U+00a6, XKB_KEY_brokenbar, BROKEN BAR */ \
   OP(L'ං', RALT(Key_N)) /* U+0d82, XKB_KEY_Sinh_ng, SINHALA ANUSVARAYA */ \
   OP(L'ඃ', LSHIFT(Key_H)) /* U+0d83, XKB_KEY_Sinh_h2, SINHALA VISARGAYA */ \
   OP(L'අ', Key_A) /* U+0d85, XKB_KEY_Sinh_a, SINHALA AYANNA */ \
   OP(L'ආ', LSHIFT(Key_A)) /* U+0d86, XKB_KEY_Sinh_aa, SINHALA AAYANNA */ \
   OP(L'ඇ', Key_W) /* U+0d87, XKB_KEY_Sinh_ae, SINHALA AEYANNA */ \
   OP(L'ඈ', LSHIFT(Key_W)) /* U+0d88, XKB_KEY_Sinh_aee, SINHALA AEEYANNA */ \
   OP(L'ඉ', Key_I) /* U+0d89, XKB_KEY_Sinh_i, SINHALA IYANNA */ \
   OP(L'ඊ', LSHIFT(Key_I)) /* U+0d8a, XKB_KEY_Sinh_ii, SINHALA IIYANNA */ \
   OP(L'උ', Key_U) /* U+0d8b, XKB_KEY_Sinh_u, SINHALA UYANNA */ \
   OP(L'ඌ', LSHIFT(Key_U)) /* U+0d8c, XKB_KEY_Sinh_uu, SINHALA UUYANNA */ \
   OP(L'ඍ', Key_Q) /* U+0d8d, XKB_KEY_Sinh_ri, SINHALA IRUYANNA */ \
   OP(L'ඎ', LSHIFT(Key_Q)) /* U+0d8e, XKB_KEY_Sinh_rii, SINHALA IRUUYANNA */ \
   OP(L'ඏ', RALT(Key_K)) /* U+0d8f, XKB_KEY_Sinh_lu, SINHALA ILUYANNA */ \
   OP(L'ඐ', RALT(LSHIFT(Key_K))) /* U+0d90, XKB_KEY_Sinh_luu, SINHALA ILUUYANNA */ \
   OP(L'එ', Key_E) /* U+0d91, XKB_KEY_Sinh_e, SINHALA EYANNA */ \
   OP(L'ඒ', LSHIFT(Key_E)) /* U+0d92, XKB_KEY_Sinh_ee, SINHALA EEYANNA */ \
   OP(L'ඓ', RALT(LSHIFT(Key_F))) /* U+0d93, XKB_KEY_Sinh_ai, SINHALA AIYANNA */ \
   OP(L'ඔ', Key_O) /* U+0d94, XKB_KEY_Sinh_o, SINHALA OYANNA */ \
   OP(L'ඕ', LSHIFT(Key_O)) /* U+0d95, XKB_KEY_Sinh_oo, SINHALA OOYANNA */ \
   OP(L'ඖ', RALT(LSHIFT(Key_H))) /* U+0d96, XKB_KEY_Sinh_au, SINHALA AUYANNA */ \
   OP(L'ක', Key_K) /* U+0d9a, XKB_KEY_Sinh_ka, SINHALA KAYANNA */ \
   OP(L'ඛ', LSHIFT(Key_K)) /* U+0d9b, XKB_KEY_Sinh_kha, SINHALA MAHA. KAYANNA */ \
   OP(L'ග', Key_G) /* U+0d9c, XKB_KEY_Sinh_ga, SINHALA GAYANNA */ \
   OP(L'ඝ', LSHIFT(Key_G)) /* U+0d9d, XKB_KEY_Sinh_gha, SINHALA MAHA. GAYANNA */ \
   OP(L'ඞ', RALT(LSHIFT(Key_N))) /* U+0d9e, XKB_KEY_Sinh_ng2, SINHALA KANTAJA NAASIKYAYA */ \
   OP(L'ඟ', RALT(Key_G)) /* U+0d9f, XKB_KEY_Sinh_nga, SINHALA SANYAKA GAYANNA */ \
   OP(L'ච', Key_C) /* U+0da0, XKB_KEY_Sinh_ca, SINHALA CAYANNA */ \
   OP(L'ඡ', LSHIFT(Key_C)) /* U+0da1, XKB_KEY_Sinh_cha, SINHALA MAHA. CAYANNA */ \
   OP(L'ජ', Key_J) /* U+0da2, XKB_KEY_Sinh_ja, SINHALA JAYANNA */ \
   OP(L'ඣ', LSHIFT(Key_J)) /* U+0da3, XKB_KEY_Sinh_jha, SINHALA MAHA. JAYANNA */ \
   OP(L'ඤ', Key_Z) /* U+0da4, XKB_KEY_Sinh_nya, SINHALA TAALUJA NAASIKYAYA */ \
   OP(L'ඥ', LSHIFT(Key_Z)) /* U+0da5, XKB_KEY_Sinh_jnya, SINHALA TAALUJA SANYOOGA NAASIKYAYA */ \
   OP(L'ඦ', RALT(Key_J)) /* U+0da6, XKB_KEY_Sinh_nja, SINHALA SANYAKA JAYANNA */ \
   OP(L'ට', RALT(Key_T)) /* U+0da7, XKB_KEY_Sinh_tta, SINHALA TTAYANNA */ \
   OP(L'ඨ', RALT(LSHIFT(Key_T))) /* U+0da8, XKB_KEY_Sinh_ttha, SINHALA MAHA. TTAYANNA */ \
   OP(L'ඩ', RALT(Key_D)) /* U+0da9, XKB_KEY_Sinh_dda, SINHALA DDAYANNA */ \
   OP(L'ඪ', RALT(LSHIFT(Key_D))) /* U+0daa, XKB_KEY_Sinh_ddha, SINHALA MAHA. DDAYANNA */ \
   OP(L'ණ', LSHIFT(Key_N)) /* U+0dab, XKB_KEY_Sinh_nna, SINHALA MUURDHAJA NAYANNA */ \
   OP(L'ඬ', LSHIFT(Key_X)) /* U+0dac, XKB_KEY_Sinh_ndda, SINHALA SANYAKA DDAYANNA */ \
   OP(L'ත', Key_T) /* U+0dad, XKB_KEY_Sinh_tha, SINHALA TAYANNA */ \
   OP(L'ථ', LSHIFT(Key_T)) /* U+0dae, XKB_KEY_Sinh_thha, SINHALA MAHA. TAYANNA */ \
   OP(L'ද', Key_D) /* U+0daf, XKB_KEY_Sinh_dha, SINHALA DAYANNA */ \
   OP(L'ධ', LSHIFT(Key_D)) /* U+0db0, XKB_KEY_Sinh_dhha, SINHALA MAHA. DAYANNA */ \
   OP(L'න', Key_N) /* U+0db1, XKB_KEY_Sinh_na, SINHALA DANTAJA NAYANNA */ \
   OP(L'ඳ', Key_X) /* U+0db3, XKB_KEY_Sinh_ndha, SINHALA SANYAKA DAYANNA */ \
   OP(L'ප', Key_P) /* U+0db4, XKB_KEY_Sinh_pa, SINHALA PAYANNA */ \
   OP(L'ඵ', LSHIFT(Key_P)) /* U+0db5, XKB_KEY_Sinh_pha, SINHALA MAHA. PAYANNA */ \
   OP(L'බ', Key_B) /* U+0db6, XKB_KEY_Sinh_ba, SINHALA BAYANNA */ \
   OP(L'භ', LSHIFT(Key_B)) /* U+0db7, XKB_KEY_Sinh_bha, SINHALA MAHA. BAYANNA */ \
   OP(L'ම', Key_M) /* U+0db8, XKB_KEY_Sinh_ma, SINHALA MAYANNA */ \
   OP(L'ඹ', LSHIFT(Key_M)) /* U+0db9, XKB_KEY_Sinh_mba, SINHALA AMBA BAYANNA */ \
   OP(L'ය', Key_Y) /* U+0dba, XKB_KEY_Sinh_ya, SINHALA YAYANNA */ \
   OP(L'ර', Key_R) /* U+0dbb, XKB_KEY_Sinh_ra, SINHALA RAYANNA */ \
   OP(L'ල', Key_L) /* U+0dbd, XKB_KEY_Sinh_la, SINHALA DANTAJA LAYANNA */ \
   OP(L'ව', Key_V) /* U+0dc0, XKB_KEY_Sinh_va, SINHALA VAYANNA */ \
   OP(L'ශ', LSHIFT(Key_S)) /* U+0dc1, XKB_KEY_Sinh_sha, SINHALA TAALUJA SAYANNA */ \
   OP(L'ෂ', RALT(Key_S)) /* U+0dc2, XKB_KEY_Sinh_ssha, SINHALA MUURDHAJA SAYANNA */ \
   OP(L'ස', Key_S) /* U+0dc3, XKB_KEY_Sinh_sa, SINHALA DANTAJA SAYANNA */ \
   OP(L'හ', Key_H) /* U+0dc4, XKB_KEY_Sinh_ha, SINHALA HAYANNA */ \
   OP(L'ළ', LSHIFT(Key_L)) /* U+0dc5, XKB_KEY_Sinh_lla, SINHALA MUURDHAJA LAYANNA */ \
   OP(L'ෆ', Key_F) /* U+0dc6, XKB_KEY_Sinh_fa, SINHALA FAYANNA */ \
   OP(L'්', LSHIFT(Key_R)) /* U+0dca, XKB_KEY_Sinh_al, SINHALA AL-LAKUNA */ \
   OP(L'ා', RALT(LSHIFT(Key_A))) /* U+0dcf, XKB_KEY_Sinh_aa2, SINHALA AELA-PILLA */ \
   OP(L'ැ', RALT(Key_W)) /* U+0dd0, XKB_KEY_Sinh_ae2, SINHALA AEDA-PILLA */ \
   OP(L'ෑ', RALT(LSHIFT(Key_W))) /* U+0dd1, XKB_KEY_Sinh_aee2, SINHALA DIGA AEDA-PILLA */ \
   OP(L'ි', RALT(Key_I)) /* U+0dd2, XKB_KEY_Sinh_i2, SINHALA IS-PILLA */ \
   OP(L'ී', RALT(LSHIFT(Key_I))) /* U+0dd3, XKB_KEY_Sinh_ii2, SINHALA DIGA IS-PILLA */ \
   OP(L'ු', RALT(Key_U)) /* U+0dd4, XKB_KEY_Sinh_u2, SINHALA PAA-PILLA */ \
   OP(L'ූ', RALT(LSHIFT(Key_U))) /* U+0dd6, XKB_KEY_Sinh_uu2, SINHALA DIGA PAA-PILLA */ \
   OP(L'ෘ', RALT(Key_Q)) /* U+0dd8, XKB_KEY_Sinh_ru2, SINHALA GAETTA-PILLA */ \
   OP(L'ෙ', RALT(Key_E)) /* U+0dd9, XKB_KEY_Sinh_e2, SINHALA KOMBUVA */ \
   OP(L'ේ', RALT(LSHIFT(Key_E))) /* U+0dda, XKB_KEY_Sinh_ee2, SINHALA DIGA KOMBUVA */ \
   OP(L'ෛ', RALT(Key_F)) /* U+0ddb, XKB_KEY_Sinh_ai2, SINHALA KOMBU DEKA */ \
   OP(L'ො', RALT(Key_O)) /* U+0ddc, XKB_KEY_Sinh_o2, SINHALA KOMBUVA HAA AELA-PILLA */ \
   OP(L'ෝ', RALT(LSHIFT(Key_O))) /* U+0ddd, XKB_KEY_Sinh_oo2, SINHALA KOMBUVA HAA DIGA AELA-PILLA */ \
   OP(L'ෞ', RALT(Key_H)) /* U+0dde, XKB_KEY_Sinh_au2, SINHALA KOMBUVA HAA GAYANUKITTA */ \
   OP(L'ෟ', RALT(Key_L)) /* U+0ddf, XKB_KEY_Sinh_lu2, SINHALA GAYANUKITTA */ \
   OP(L'ෲ', RALT(LSHIFT(Key_Q))) /* U+0df2, XKB_KEY_Sinh_ruu2, SINHALA DIGA GAETTA-PILLA */ \
   OP(L'ෳ', RALT(LSHIFT(Key_L))) /* U+0df3, XKB_KEY_Sinh_luu2, SINHALA DIGA GAYANUKITTA */ \
   OP(L'෴', RALT(Key_Period)) /* U+0df4, XKB_KEY_Sinh_kunddaliya, SINHALA KUNDDALIYA */ \
   OP(L'‌', RALT(Key_Spacebar)) \
   OP(L'‍', RALT(Key_Slash)) \

#define _HOST_KEYMAP_NON_PRINTABLE(OP) \
   OP(XKB_KEY_0, Key_0) \
   OP(XKB_KEY_1, Key_1) \
   OP(XKB_KEY_2, Key_2) \
   OP(XKB_KEY_3, Key_3) \
   OP(XKB_KEY_4, Key_4) \
   OP(XKB_KEY_5, Key_5) \
   OP(XKB_KEY_6, Key_6) \
   OP(XKB_KEY_7, Key_7) \
   OP(XKB_KEY_8, Key_8) \
   OP(XKB_KEY_9, Key_9) \
   OP(XKB_KEY_Alt_L, Key_LeftAlt) /* XKB_KEY_Alt_L, Left alt  */ \
   OP(XKB_KEY_BackSpace, Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP(XKB_KEY_Break, LCTRL(Key_Pause)) /* XKB_KEY_Break */ \
   OP(XKB_KEY_Caps_Lock, Key_CapsLock) /* XKB_KEY_Caps_Lock, Caps lock  */ \
   OP(XKB_KEY_Control_L, Key_LeftControl) /* XKB_KEY_Control_L, Left control  */ \
   OP(XKB_KEY_Control_R, Key_RightControl) /* XKB_KEY_Control_R, Right control  */ \
   OP(XKB_KEY_Delete, Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \
   OP(XKB_KEY_Down, Key_DownArrow) /* XKB_KEY_Down, Move down, down arrow  */ \
   OP(XKB_KEY_End, Key_End) /* XKB_KEY_End, EOL  */ \
   OP(XKB_KEY_Escape, Key_Escape) /* XKB_KEY_Escape */ \
   OP(XKB_KEY_F, LSHIFT(Key_F)) \
   OP(XKB_KEY_F1, Key_F1) /* XKB_KEY_F1 */ \
   OP(XKB_KEY_F10, Key_F10) /* XKB_KEY_F10 */ \
   OP(XKB_KEY_F11, Key_F11) /* XKB_KEY_F11 */ \
   OP(XKB_KEY_F12, Key_F12) /* XKB_KEY_F12 */ \
   OP(XKB_KEY_F2, Key_F2) /* XKB_KEY_F2 */ \
   OP(XKB_KEY_F3, Key_F3) /* XKB_KEY_F3 */ \
   OP(XKB_KEY_F4, Key_F4) /* XKB_KEY_F4 */ \
   OP(XKB_KEY_F5, Key_F5) /* XKB_KEY_F5 */ \
   OP(XKB_KEY_F6, Key_F6) /* XKB_KEY_F6 */ \
   OP(XKB_KEY_F7, Key_F7) /* XKB_KEY_F7 */ \
   OP(XKB_KEY_F8, Key_F8) /* XKB_KEY_F8 */ \
   OP(XKB_KEY_F9, Key_F9) /* XKB_KEY_F9 */ \
   OP(XKB_KEY_Home, Key_Home) /* XKB_KEY_Home */ \
   OP(XKB_KEY_ISO_Left_Tab, LSHIFT(Key_Tab)) /* XKB_KEY_ISO_Left_Tab */ \
   OP(XKB_KEY_ISO_Level3_Shift, Key_RightAlt) /* XKB_KEY_ISO_Level3_Shift */ \
   OP(XKB_KEY_Insert, Key_Insert) /* XKB_KEY_Insert, Insert, insert here  */ \
   OP(XKB_KEY_KP_0, LSHIFT(Key_Keypad0)) /* XKB_KEY_KP_0 */ \
   OP(XKB_KEY_KP_1, LSHIFT(Key_Keypad1)) /* XKB_KEY_KP_1 */ \
   OP(XKB_KEY_KP_2, LSHIFT(Key_Keypad2)) /* XKB_KEY_KP_2 */ \
   OP(XKB_KEY_KP_3, LSHIFT(Key_Keypad3)) /* XKB_KEY_KP_3 */ \
   OP(XKB_KEY_KP_4, LSHIFT(Key_Keypad4)) /* XKB_KEY_KP_4 */ \
   OP(XKB_KEY_KP_5, LSHIFT(Key_Keypad5)) /* XKB_KEY_KP_5 */ \
   OP(XKB_KEY_KP_6, LSHIFT(Key_Keypad6)) /* XKB_KEY_KP_6 */ \
   OP(XKB_KEY_KP_7, LSHIFT(Key_Keypad7)) /* XKB_KEY_KP_7 */ \
   OP(XKB_KEY_KP_8, LSHIFT(Key_Keypad8)) /* XKB_KEY_KP_8 */ \
   OP(XKB_KEY_KP_9, LSHIFT(Key_Keypad9)) /* XKB_KEY_KP_9 */ \
   OP(XKB_KEY_KP_Add, Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(XKB_KEY_KP_Begin, Key_Keypad5) /* XKB_KEY_KP_Begin */ \
   OP(XKB_KEY_KP_Decimal, LSHIFT(Key_KeypadDot)) /* XKB_KEY_KP_Decimal */ \
   OP(XKB_KEY_KP_Delete, Key_KeypadDot) /* XKB_KEY_KP_Delete */ \
   OP(XKB_KEY_KP_Divide, Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP(XKB_KEY_KP_Down, Key_Keypad2) /* XKB_KEY_KP_Down */ \
   OP(XKB_KEY_KP_End, Key_Keypad1) /* XKB_KEY_KP_End */ \
   OP(XKB_KEY_KP_Enter, Key_KeypadEnter) /* XKB_KEY_KP_Enter, Enter  */ \
   OP(XKB_KEY_KP_Home, Key_Keypad7) /* XKB_KEY_KP_Home */ \
   OP(XKB_KEY_KP_Insert, Key_Keypad0) /* XKB_KEY_KP_Insert */ \
   OP(XKB_KEY_KP_Left, Key_Keypad4) /* XKB_KEY_KP_Left */ \
   OP(XKB_KEY_KP_Multiply, Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP(XKB_KEY_KP_Next, Key_Keypad3) /* XKB_KEY_KP_Next */ \
   OP(XKB_KEY_KP_Prior, Key_Keypad9) /* XKB_KEY_KP_Prior */ \
   OP(XKB_KEY_KP_Right, Key_Keypad6) /* XKB_KEY_KP_Right */ \
   OP(XKB_KEY_KP_Subtract, Key_KeypadSubtract) /* XKB_KEY_KP_Subtract */ \
   OP(XKB_KEY_KP_Up, Key_Keypad8) /* XKB_KEY_KP_Up */ \
   OP(XKB_KEY_Left, Key_LeftArrow) /* XKB_KEY_Left, Move left, left arrow  */ \
   OP(XKB_KEY_Menu, Key_PcApplication) /* XKB_KEY_Menu */ \
   OP(XKB_KEY_Meta_L, LSHIFT(Key_LeftAlt)) /* XKB_KEY_Meta_L, Left meta  */ \
   OP(XKB_KEY_Next, Key_PageDown) /* XKB_KEY_Next, Next  */ \
   OP(XKB_KEY_Num_Lock, Key_KeypadNumLock) /* XKB_KEY_Num_Lock */ \
   OP(XKB_KEY_Pause, Key_Pause) /* XKB_KEY_Pause, Pause, hold  */ \
   OP(XKB_KEY_Print, Key_PrintScreen) /* XKB_KEY_Print */ \
   OP(XKB_KEY_Prior, Key_PageUp) /* XKB_KEY_Prior, Prior, previous  */ \
   OP(XKB_KEY_Return, Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP(XKB_KEY_Right, Key_RightArrow) /* XKB_KEY_Right, Move right, right arrow  */ \
   OP(XKB_KEY_Scroll_Lock, Key_ScrollLock) /* XKB_KEY_Scroll_Lock */ \
   OP(XKB_KEY_Shift_L, Key_LeftShift) /* XKB_KEY_Shift_L, Left shift  */ \
   OP(XKB_KEY_Shift_R, Key_RightShift) /* XKB_KEY_Shift_R, Right shift  */ \
   OP(XKB_KEY_Sinh_a, Key_A) \
   OP(XKB_KEY_Sinh_aa, LSHIFT(Key_A)) \
   OP(XKB_KEY_Sinh_aa2, RALT(LSHIFT(Key_A))) \
   OP(XKB_KEY_Sinh_ae, Key_W) \
   OP(XKB_KEY_Sinh_ae2, RALT(Key_W)) \
   OP(XKB_KEY_Sinh_aee, LSHIFT(Key_W)) \
   OP(XKB_KEY_Sinh_aee2, RALT(LSHIFT(Key_W))) \
   OP(XKB_KEY_Sinh_ai, RALT(LSHIFT(Key_F))) \
   OP(XKB_KEY_Sinh_ai2, RALT(Key_F)) \
   OP(XKB_KEY_Sinh_al, LSHIFT(Key_R)) \
   OP(XKB_KEY_Sinh_au, RALT(LSHIFT(Key_H))) \
   OP(XKB_KEY_Sinh_au2, RALT(Key_H)) \
   OP(XKB_KEY_Sinh_ba, Key_B) \
   OP(XKB_KEY_Sinh_bha, LSHIFT(Key_B)) \
   OP(XKB_KEY_Sinh_ca, Key_C) \
   OP(XKB_KEY_Sinh_cha, LSHIFT(Key_C)) \
   OP(XKB_KEY_Sinh_dda, RALT(Key_D)) \
   OP(XKB_KEY_Sinh_ddha, RALT(LSHIFT(Key_D))) \
   OP(XKB_KEY_Sinh_dha, Key_D) \
   OP(XKB_KEY_Sinh_dhha, LSHIFT(Key_D)) \
   OP(XKB_KEY_Sinh_e, Key_E) \
   OP(XKB_KEY_Sinh_e2, RALT(Key_E)) \
   OP(XKB_KEY_Sinh_ee, LSHIFT(Key_E)) \
   OP(XKB_KEY_Sinh_ee2, RALT(LSHIFT(Key_E))) \
   OP(XKB_KEY_Sinh_fa, Key_F) \
   OP(XKB_KEY_Sinh_ga, Key_G) \
   OP(XKB_KEY_Sinh_gha, LSHIFT(Key_G)) \
   OP(XKB_KEY_Sinh_h2, LSHIFT(Key_H)) \
   OP(XKB_KEY_Sinh_ha, Key_H) \
   OP(XKB_KEY_Sinh_i, Key_I) \
   OP(XKB_KEY_Sinh_i2, RALT(Key_I)) \
   OP(XKB_KEY_Sinh_ii, LSHIFT(Key_I)) \
   OP(XKB_KEY_Sinh_ii2, RALT(LSHIFT(Key_I))) \
   OP(XKB_KEY_Sinh_ja, Key_J) \
   OP(XKB_KEY_Sinh_jha, LSHIFT(Key_J)) \
   OP(XKB_KEY_Sinh_jnya, LSHIFT(Key_Z)) \
   OP(XKB_KEY_Sinh_ka, Key_K) \
   OP(XKB_KEY_Sinh_kha, LSHIFT(Key_K)) \
   OP(XKB_KEY_Sinh_kunddaliya, RALT(Key_Period)) \
   OP(XKB_KEY_Sinh_la, Key_L) \
   OP(XKB_KEY_Sinh_lla, LSHIFT(Key_L)) \
   OP(XKB_KEY_Sinh_lu, RALT(Key_K)) \
   OP(XKB_KEY_Sinh_lu2, RALT(Key_L)) \
   OP(XKB_KEY_Sinh_luu, RALT(LSHIFT(Key_K))) \
   OP(XKB_KEY_Sinh_luu2, RALT(LSHIFT(Key_L))) \
   OP(XKB_KEY_Sinh_ma, Key_M) \
   OP(XKB_KEY_Sinh_mba, LSHIFT(Key_M)) \
   OP(XKB_KEY_Sinh_na, Key_N) \
   OP(XKB_KEY_Sinh_ndda, LSHIFT(Key_X)) \
   OP(XKB_KEY_Sinh_ndha, Key_X) \
   OP(XKB_KEY_Sinh_ng, RALT(Key_N)) \
   OP(XKB_KEY_Sinh_ng2, RALT(LSHIFT(Key_N))) \
   OP(XKB_KEY_Sinh_nga, RALT(Key_G)) \
   OP(XKB_KEY_Sinh_nja, RALT(Key_J)) \
   OP(XKB_KEY_Sinh_nna, LSHIFT(Key_N)) \
   OP(XKB_KEY_Sinh_nya, Key_Z) \
   OP(XKB_KEY_Sinh_o, Key_O) \
   OP(XKB_KEY_Sinh_o2, RALT(Key_O)) \
   OP(XKB_KEY_Sinh_oo, LSHIFT(Key_O)) \
   OP(XKB_KEY_Sinh_oo2, RALT(LSHIFT(Key_O))) \
   OP(XKB_KEY_Sinh_pa, Key_P) \
   OP(XKB_KEY_Sinh_pha, LSHIFT(Key_P)) \
   OP(XKB_KEY_Sinh_ra, Key_R) \
   OP(XKB_KEY_Sinh_ri, Key_Q) \
   OP(XKB_KEY_Sinh_rii, LSHIFT(Key_Q)) \
   OP(XKB_KEY_Sinh_ru2, RALT(Key_Q)) \
   OP(XKB_KEY_Sinh_ruu2, RALT(LSHIFT(Key_Q))) \
   OP(XKB_KEY_Sinh_sa, Key_S) \
   OP(XKB_KEY_Sinh_sha, LSHIFT(Key_S)) \
   OP(XKB_KEY_Sinh_ssha, RALT(Key_S)) \
   OP(XKB_KEY_Sinh_tha, Key_T) \
   OP(XKB_KEY_Sinh_thha, LSHIFT(Key_T)) \
   OP(XKB_KEY_Sinh_tta, RALT(Key_T)) \
   OP(XKB_KEY_Sinh_ttha, RALT(LSHIFT(Key_T))) \
   OP(XKB_KEY_Sinh_u, Key_U) \
   OP(XKB_KEY_Sinh_u2, RALT(Key_U)) \
   OP(XKB_KEY_Sinh_uu, LSHIFT(Key_U)) \
   OP(XKB_KEY_Sinh_uu2, RALT(LSHIFT(Key_U))) \
   OP(XKB_KEY_Sinh_va, Key_V) \
   OP(XKB_KEY_Sinh_ya, Key_Y) \
   OP(XKB_KEY_Super_L, Key_LeftGui) /* XKB_KEY_Super_L, Left super  */ \
   OP(XKB_KEY_Super_R, Key_RightGui) /* XKB_KEY_Super_R, Right super  */ \
   OP(XKB_KEY_Sys_Req, LALT(Key_PrintScreen)) /* XKB_KEY_Sys_Req */ \
   OP(XKB_KEY_Tab, Key_Tab) /* XKB_KEY_Tab */ \
   OP(XKB_KEY_Up, Key_UpArrow) /* XKB_KEY_Up, Move up, up arrow  */ \
   OP(XKB_KEY_V, LSHIFT(Key_V)) \
   OP(XKB_KEY_XF86ClearGrab, LCTRL(LALT(Key_KeypadMultiply))) /* XKB_KEY_XF86ClearGrab, kill application with grab  */ \
   OP(XKB_KEY_XF86Next_VMode, LCTRL(LALT(Key_KeypadAdd))) /* XKB_KEY_XF86Next_VMode, next video mode available   */ \
   OP(XKB_KEY_XF86Prev_VMode, LCTRL(LALT(Key_KeypadSubtract))) /* XKB_KEY_XF86Prev_VMode, prev. video mode available  */ \
   OP(XKB_KEY_XF86Switch_VT_1, LCTRL(LALT(Key_F1))) /* XKB_KEY_XF86Switch_VT_1 */ \
   OP(XKB_KEY_XF86Switch_VT_10, LCTRL(LALT(Key_F10))) /* XKB_KEY_XF86Switch_VT_10 */ \
   OP(XKB_KEY_XF86Switch_VT_11, LCTRL(LALT(Key_F11))) /* XKB_KEY_XF86Switch_VT_11 */ \
   OP(XKB_KEY_XF86Switch_VT_12, LCTRL(LALT(Key_F12))) /* XKB_KEY_XF86Switch_VT_12 */ \
   OP(XKB_KEY_XF86Switch_VT_2, LCTRL(LALT(Key_F2))) /* XKB_KEY_XF86Switch_VT_2 */ \
   OP(XKB_KEY_XF86Switch_VT_3, LCTRL(LALT(Key_F3))) /* XKB_KEY_XF86Switch_VT_3 */ \
   OP(XKB_KEY_XF86Switch_VT_4, LCTRL(LALT(Key_F4))) /* XKB_KEY_XF86Switch_VT_4 */ \
   OP(XKB_KEY_XF86Switch_VT_5, LCTRL(LALT(Key_F5))) /* XKB_KEY_XF86Switch_VT_5 */ \
   OP(XKB_KEY_XF86Switch_VT_6, LCTRL(LALT(Key_F6))) /* XKB_KEY_XF86Switch_VT_6 */ \
   OP(XKB_KEY_XF86Switch_VT_7, LCTRL(LALT(Key_F7))) /* XKB_KEY_XF86Switch_VT_7 */ \
   OP(XKB_KEY_XF86Switch_VT_8, LCTRL(LALT(Key_F8))) /* XKB_KEY_XF86Switch_VT_8 */ \
   OP(XKB_KEY_XF86Switch_VT_9, LCTRL(LALT(Key_F9))) /* XKB_KEY_XF86Switch_VT_9 */ \
   OP(XKB_KEY_XF86Ungrab, LCTRL(LALT(Key_KeypadDivide))) /* XKB_KEY_XF86Ungrab, force ungrab                */ \
   OP(XKB_KEY_ampersand, LSHIFT(Key_7)) \
   OP(XKB_KEY_apostrophe, Key_Quote) /* XKB_KEY_quoteright, deprecated  */ \
   OP(XKB_KEY_asciicircum, LSHIFT(Key_6)) \
   OP(XKB_KEY_asciitilde, LSHIFT(Key_Backtick)) \
   OP(XKB_KEY_asterisk, LSHIFT(Key_8)) \
   OP(XKB_KEY_at, LSHIFT(Key_2)) \
   OP(XKB_KEY_backslash, Key_NonUsPound) \
   OP(XKB_KEY_bar, LSHIFT(Key_NonUsPound)) \
   OP(XKB_KEY_braceleft, LSHIFT(Key_LeftBracket)) \
   OP(XKB_KEY_braceright, LSHIFT(Key_RightBracket)) \
   OP(XKB_KEY_bracketleft, Key_LeftBracket) \
   OP(XKB_KEY_bracketright, Key_RightBracket) \
   OP(XKB_KEY_brokenbar, RALT(LSHIFT(Key_NonUsBackslashAndPipe))) \
   OP(XKB_KEY_colon, LSHIFT(Key_Semicolon)) \
   OP(XKB_KEY_comma, Key_Comma) \
   OP(XKB_KEY_dollar, LSHIFT(Key_4)) \
   OP(XKB_KEY_equal, Key_Equals) \
   OP(XKB_KEY_exclam, LSHIFT(Key_1)) \
   OP(XKB_KEY_grave, Key_Backtick) /* XKB_KEY_quoteleft, deprecated  */ \
   OP(XKB_KEY_greater, LSHIFT(Key_Period)) \
   OP(XKB_KEY_less, Key_NonUsBackslashAndPipe) \
   OP(XKB_KEY_minus, Key_Minus) \
   OP(XKB_KEY_nobreakspace, LSHIFT(Key_Spacebar)) \
   OP(XKB_KEY_numbersign, LSHIFT(Key_3)) \
   OP(XKB_KEY_parenleft, LSHIFT(Key_9)) \
   OP(XKB_KEY_parenright, LSHIFT(Key_0)) \
   OP(XKB_KEY_percent, LSHIFT(Key_5)) \
   OP(XKB_KEY_period, Key_Period) \
   OP(XKB_KEY_plus, LSHIFT(Key_Equals)) \
   OP(XKB_KEY_question, LSHIFT(Key_Slash)) \
   OP(XKB_KEY_quotedbl, LSHIFT(Key_Quote)) \
   OP(XKB_KEY_semicolon, Key_Semicolon) \
   OP(XKB_KEY_slash, Key_Slash) \
   OP(XKB_KEY_space, Key_Spacebar) \
   OP(XKB_KEY_underscore, LSHIFT(Key_Minus)) \


namespace kaleidoscope {
namespace host_keymap {
namespace linux {
namespace lk {
namespace standard {

HOST_KEYMAP_LINUX(
  _HOST_KEYMAP_ASCII,
  _HOST_KEYMAP_UNICODE,
  _HOST_KEYMAP_NON_PRINTABLE
)

} // namespace standard
} // namespace lk
} // namespace linux
} // namespace host_keymap
} // namespace kaleidoscope

#undef _HOST_KEYMAP_ASCII
#undef _HOST_KEYMAP_UNICODE
#undef _HOST_KEYMAP_NON_PRINTABLE

