/* Kaleidoscope - Firmware for computer input devices
 * Copyright (C) 2013-2019  Keyboard.io, Inc.
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "kaleidoscope/host_keymap/linux.h"

// This file was autogenerated by host_keymap.
// Its content is based on information provided by the XKB X11 system
// collected with the extraordinary libxkbcommon.

// layout: ru
// variant: phonetic_azerty

#define _HOST_KEYMAP_ASCII(OP) \
   OP('\b', Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP('\t', Key_Tab) /* XKB_KEY_Tab */ \
   OP('\r', Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP('\e', Key_Escape) /* XKB_KEY_Escape */ \
   OP(' ', Key_Spacebar) /* U+0020, XKB_KEY_space, SPACE */ \
   OP('!', Key_Slash) /* U+0021, XKB_KEY_exclam, EXCLAMATION MARK */ \
   OP('"', Key_3) /* U+0022, XKB_KEY_quotedbl, QUOTATION MARK */ \
   OP('#', RALT(Key_3)) /* U+0023, XKB_KEY_numbersign, NUMBER SIGN */ \
   OP('$', RALT(LSHIFT(Key_4))) /* U+0024, XKB_KEY_dollar, DOLLAR SIGN */ \
   OP('%', LSHIFT(Key_Quote)) /* U+0025, XKB_KEY_percent, PERCENT SIGN */ \
   OP('&', Key_1) /* U+0026, XKB_KEY_ampersand, AMPERSAND */ \
   OP('\'', Key_4) /* U+0027, XKB_KEY_apostrophe, APOSTROPHE */ \
   OP('(', Key_5) /* U+0028, XKB_KEY_parenleft, LEFT PARENTHESIS */ \
   OP(')', Key_Minus) /* U+0029, XKB_KEY_parenright, RIGHT PARENTHESIS */ \
   OP('*', Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP('+', Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(',', Key_M) /* U+002c, XKB_KEY_comma, COMMA */ \
   OP('-', Key_6) /* U+002d, XKB_KEY_minus, HYPHEN-MINUS */ \
   OP('.', LSHIFT(Key_Comma)) /* U+002e, XKB_KEY_period, FULL STOP */ \
   OP('/', Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP('0', LSHIFT(Key_0)) /* U+0030, XKB_KEY_0, DIGIT ZERO */ \
   OP('1', LSHIFT(Key_1)) /* U+0031, XKB_KEY_1, DIGIT ONE */ \
   OP('2', LSHIFT(Key_2)) /* U+0032, XKB_KEY_2, DIGIT TWO */ \
   OP('3', LSHIFT(Key_3)) /* U+0033, XKB_KEY_3, DIGIT THREE */ \
   OP('4', LSHIFT(Key_4)) /* U+0034, XKB_KEY_4, DIGIT FOUR */ \
   OP('5', LSHIFT(Key_5)) /* U+0035, XKB_KEY_5, DIGIT FIVE */ \
   OP('6', LSHIFT(Key_6)) /* U+0036, XKB_KEY_6, DIGIT SIX */ \
   OP('7', LSHIFT(Key_7)) /* U+0037, XKB_KEY_7, DIGIT SEVEN */ \
   OP('8', LSHIFT(Key_8)) /* U+0038, XKB_KEY_8, DIGIT EIGHT */ \
   OP('9', LSHIFT(Key_9)) /* U+0039, XKB_KEY_9, DIGIT NINE */ \
   OP(':', Key_Period) /* U+003a, XKB_KEY_colon, COLON */ \
   OP(';', Key_Comma) /* U+003b, XKB_KEY_semicolon, SEMICOLON */ \
   OP('?', LSHIFT(Key_M)) /* U+003f, XKB_KEY_question, QUESTION MARK */ \
   OP('@', RALT(Key_0)) /* U+0040, XKB_KEY_at, COMMERCIAL AT */ \
   OP('[', RALT(Key_5)) /* U+005b, XKB_KEY_bracketleft, LEFT SQUARE BRACKET */ \
   OP('\\', RALT(Key_8)) /* U+005c, XKB_KEY_backslash, REVERSE SOLIDUS */ \
   OP(']', RALT(Key_Minus)) /* U+005d, XKB_KEY_bracketright, RIGHT SQUARE BRACKET */ \
   OP('^', RALT(Key_9)) /* U+005e, XKB_KEY_asciicircum, CIRCUMFLEX ACCENT */ \
   OP('_', Key_8) /* U+005f, XKB_KEY_underscore, LOW LINE */ \
   OP('`', RALT(Key_7)) /* U+0060, XKB_KEY_grave, GRAVE ACCENT */ \
   OP('{', RALT(Key_4)) /* U+007b, XKB_KEY_braceleft, LEFT CURLY BRACKET */ \
   OP('|', Key_NonUsBackslashAndPipe) /* U+007c, XKB_KEY_bar, VERTICAL LINE */ \
   OP('}', RALT(Key_Equals)) /* U+007d, XKB_KEY_braceright, RIGHT CURLY BRACKET */ \
   OP('~', RALT(Key_2)) /* U+007e, XKB_KEY_asciitilde, TILDE */ \
   OP('', Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \

#define _HOST_KEYMAP_UNICODE(OP) \
   OP(L'\b', Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP(L'\t', Key_Tab) /* XKB_KEY_Tab */ \
   OP(L'\r', Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP(L'\e', Key_Escape) /* XKB_KEY_Escape */ \
   OP(L' ', Key_Spacebar) /* U+0020, XKB_KEY_space, SPACE */ \
   OP(L'!', Key_Slash) /* U+0021, XKB_KEY_exclam, EXCLAMATION MARK */ \
   OP(L'"', Key_3) /* U+0022, XKB_KEY_quotedbl, QUOTATION MARK */ \
   OP(L'#', RALT(Key_3)) /* U+0023, XKB_KEY_numbersign, NUMBER SIGN */ \
   OP(L'$', RALT(LSHIFT(Key_4))) /* U+0024, XKB_KEY_dollar, DOLLAR SIGN */ \
   OP(L'%', LSHIFT(Key_Quote)) /* U+0025, XKB_KEY_percent, PERCENT SIGN */ \
   OP(L'&', Key_1) /* U+0026, XKB_KEY_ampersand, AMPERSAND */ \
   OP(L'\'', Key_4) /* U+0027, XKB_KEY_apostrophe, APOSTROPHE */ \
   OP(L'(', Key_5) /* U+0028, XKB_KEY_parenleft, LEFT PARENTHESIS */ \
   OP(L')', Key_Minus) /* U+0029, XKB_KEY_parenright, RIGHT PARENTHESIS */ \
   OP(L'*', Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP(L'+', Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(L',', Key_M) /* U+002c, XKB_KEY_comma, COMMA */ \
   OP(L'-', Key_6) /* U+002d, XKB_KEY_minus, HYPHEN-MINUS */ \
   OP(L'.', LSHIFT(Key_Comma)) /* U+002e, XKB_KEY_period, FULL STOP */ \
   OP(L'/', Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP(L'0', LSHIFT(Key_0)) /* U+0030, XKB_KEY_0, DIGIT ZERO */ \
   OP(L'1', LSHIFT(Key_1)) /* U+0031, XKB_KEY_1, DIGIT ONE */ \
   OP(L'2', LSHIFT(Key_2)) /* U+0032, XKB_KEY_2, DIGIT TWO */ \
   OP(L'3', LSHIFT(Key_3)) /* U+0033, XKB_KEY_3, DIGIT THREE */ \
   OP(L'4', LSHIFT(Key_4)) /* U+0034, XKB_KEY_4, DIGIT FOUR */ \
   OP(L'5', LSHIFT(Key_5)) /* U+0035, XKB_KEY_5, DIGIT FIVE */ \
   OP(L'6', LSHIFT(Key_6)) /* U+0036, XKB_KEY_6, DIGIT SIX */ \
   OP(L'7', LSHIFT(Key_7)) /* U+0037, XKB_KEY_7, DIGIT SEVEN */ \
   OP(L'8', LSHIFT(Key_8)) /* U+0038, XKB_KEY_8, DIGIT EIGHT */ \
   OP(L'9', LSHIFT(Key_9)) /* U+0039, XKB_KEY_9, DIGIT NINE */ \
   OP(L':', Key_Period) /* U+003a, XKB_KEY_colon, COLON */ \
   OP(L';', Key_Comma) /* U+003b, XKB_KEY_semicolon, SEMICOLON */ \
   OP(L'?', LSHIFT(Key_M)) /* U+003f, XKB_KEY_question, QUESTION MARK */ \
   OP(L'@', RALT(Key_0)) /* U+0040, XKB_KEY_at, COMMERCIAL AT */ \
   OP(L'[', RALT(Key_5)) /* U+005b, XKB_KEY_bracketleft, LEFT SQUARE BRACKET */ \
   OP(L'\\', RALT(Key_8)) /* U+005c, XKB_KEY_backslash, REVERSE SOLIDUS */ \
   OP(L']', RALT(Key_Minus)) /* U+005d, XKB_KEY_bracketright, RIGHT SQUARE BRACKET */ \
   OP(L'^', RALT(Key_9)) /* U+005e, XKB_KEY_asciicircum, CIRCUMFLEX ACCENT */ \
   OP(L'_', Key_8) /* U+005f, XKB_KEY_underscore, LOW LINE */ \
   OP(L'`', RALT(Key_7)) /* U+0060, XKB_KEY_grave, GRAVE ACCENT */ \
   OP(L'{', RALT(Key_4)) /* U+007b, XKB_KEY_braceleft, LEFT CURLY BRACKET */ \
   OP(L'|', Key_NonUsBackslashAndPipe) /* U+007c, XKB_KEY_bar, VERTICAL LINE */ \
   OP(L'}', RALT(Key_Equals)) /* U+007d, XKB_KEY_braceright, RIGHT CURLY BRACKET */ \
   OP(L'~', RALT(Key_2)) /* U+007e, XKB_KEY_asciitilde, TILDE */ \
   OP(L'', Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \
   OP(L'¡', RALT(LSHIFT(Key_1))) /* U+00a1, XKB_KEY_exclamdown, INVERTED EXCLAMATION MARK */ \
   OP(L'£', RALT(LSHIFT(Key_3))) /* U+00a3, XKB_KEY_sterling, POUND SIGN */ \
   OP(L'¦', LSHIFT(Key_NonUsBackslashAndPipe)) /* U+00a6, XKB_KEY_brokenbar, BROKEN BAR */ \
   OP(L'§', LSHIFT(Key_Slash)) /* U+00a7, XKB_KEY_section, SECTION SIGN */ \
   OP(L'°', LSHIFT(Key_Minus)) /* U+00b0, XKB_KEY_degree, DEGREE SIGN */ \
   OP(L'±', RALT(LSHIFT(Key_9))) /* U+00b1, XKB_KEY_plusminus, PLUS-MINUS SIGN */ \
   OP(L'´', RALT(Key_M)) /* U+00b4, XKB_KEY_acute, ACUTE ACCENT */ \
   OP(L'·', RALT(Key_Period)) /* U+00b7, XKB_KEY_periodcentered, MIDDLE DOT */ \
   OP(L'¹', RALT(Key_1)) /* U+00b9, XKB_KEY_onesuperior, SUPERSCRIPT ONE */ \
   OP(L'¿', RALT(LSHIFT(Key_Minus))) /* U+00bf, XKB_KEY_questiondown, INVERTED QUESTION MARK */ \
   OP(L'×', RALT(LSHIFT(Key_Comma))) /* U+00d7, XKB_KEY_multiply, MULTIPLICATION SIGN */ \
   OP(L'à', Key_0) /* U+00e0, XKB_KEY_agrave, LATIN SMALL LETTER A WITH GRAVE */ \
   OP(L'ç', Key_9) /* U+00e7, XKB_KEY_ccedilla, LATIN SMALL LETTER C WITH CEDILLA */ \
   OP(L'è', Key_7) /* U+00e8, XKB_KEY_egrave, LATIN SMALL LETTER E WITH GRAVE */ \
   OP(L'é', Key_2) /* U+00e9, XKB_KEY_eacute, LATIN SMALL LETTER E WITH ACUTE */ \
   OP(L'÷', RALT(LSHIFT(Key_Period))) /* U+00f7, XKB_KEY_division, DIVISION SIGN */ \
   OP(L'ù', Key_Quote) /* U+00f9, XKB_KEY_ugrave, LATIN SMALL LETTER U WITH GRAVE */ \
   OP(L'ˇ', RALT(LSHIFT(Key_Quote))) /* U+02c7, XKB_KEY_caron, CARON */ \
   OP(L'˝', RALT(LSHIFT(Key_M))) /* U+02dd, XKB_KEY_doubleacute, DOUBLE ACUTE ACCENT */ \
   OP(L'А', LSHIFT(Key_Q)) /* U+0410, XKB_KEY_Cyrillic_A, CYRILLIC CAPITAL LETTER A */ \
   OP(L'Б', LSHIFT(Key_B)) /* U+0411, XKB_KEY_Cyrillic_BE, CYRILLIC CAPITAL LETTER BE */ \
   OP(L'В', LSHIFT(Key_Z)) /* U+0412, XKB_KEY_Cyrillic_VE, CYRILLIC CAPITAL LETTER VE */ \
   OP(L'Г', LSHIFT(Key_G)) /* U+0413, XKB_KEY_Cyrillic_GHE, CYRILLIC CAPITAL LETTER GHE */ \
   OP(L'Д', LSHIFT(Key_D)) /* U+0414, XKB_KEY_Cyrillic_DE, CYRILLIC CAPITAL LETTER DE */ \
   OP(L'Е', LSHIFT(Key_E)) /* U+0415, XKB_KEY_Cyrillic_IE, CYRILLIC CAPITAL LETTER IE */ \
   OP(L'Ж', LSHIFT(Key_V)) /* U+0416, XKB_KEY_Cyrillic_ZHE, CYRILLIC CAPITAL LETTER ZHE */ \
   OP(L'З', LSHIFT(Key_W)) /* U+0417, XKB_KEY_Cyrillic_ZE, CYRILLIC CAPITAL LETTER ZE */ \
   OP(L'И', LSHIFT(Key_I)) /* U+0418, XKB_KEY_Cyrillic_I, CYRILLIC CAPITAL LETTER I */ \
   OP(L'Й', LSHIFT(Key_J)) /* U+0419, XKB_KEY_Cyrillic_SHORTI, CYRILLIC CAPITAL LETTER SHORT I */ \
   OP(L'К', LSHIFT(Key_K)) /* U+041a, XKB_KEY_Cyrillic_KA, CYRILLIC CAPITAL LETTER KA */ \
   OP(L'Л', LSHIFT(Key_L)) /* U+041b, XKB_KEY_Cyrillic_EL, CYRILLIC CAPITAL LETTER EL */ \
   OP(L'М', LSHIFT(Key_Semicolon)) /* U+041c, XKB_KEY_Cyrillic_EM, CYRILLIC CAPITAL LETTER EM */ \
   OP(L'Н', LSHIFT(Key_N)) /* U+041d, XKB_KEY_Cyrillic_EN, CYRILLIC CAPITAL LETTER EN */ \
   OP(L'О', LSHIFT(Key_O)) /* U+041e, XKB_KEY_Cyrillic_O, CYRILLIC CAPITAL LETTER O */ \
   OP(L'П', LSHIFT(Key_P)) /* U+041f, XKB_KEY_Cyrillic_PE, CYRILLIC CAPITAL LETTER PE */ \
   OP(L'Р', LSHIFT(Key_R)) /* U+0420, XKB_KEY_Cyrillic_ER, CYRILLIC CAPITAL LETTER ER */ \
   OP(L'С', LSHIFT(Key_S)) /* U+0421, XKB_KEY_Cyrillic_ES, CYRILLIC CAPITAL LETTER ES */ \
   OP(L'Т', LSHIFT(Key_T)) /* U+0422, XKB_KEY_Cyrillic_TE, CYRILLIC CAPITAL LETTER TE */ \
   OP(L'У', LSHIFT(Key_U)) /* U+0423, XKB_KEY_Cyrillic_U, CYRILLIC CAPITAL LETTER U */ \
   OP(L'Ф', LSHIFT(Key_F)) /* U+0424, XKB_KEY_Cyrillic_EF, CYRILLIC CAPITAL LETTER EF */ \
   OP(L'Х', LSHIFT(Key_H)) /* U+0425, XKB_KEY_Cyrillic_HA, CYRILLIC CAPITAL LETTER HA */ \
   OP(L'Ц', LSHIFT(Key_C)) /* U+0426, XKB_KEY_Cyrillic_TSE, CYRILLIC CAPITAL LETTER TSE */ \
   OP(L'Ч', LSHIFT(Key_Equals)) /* U+0427, XKB_KEY_Cyrillic_CHE, CYRILLIC CAPITAL LETTER CHE */ \
   OP(L'Ш', LSHIFT(Key_LeftBracket)) /* U+0428, XKB_KEY_Cyrillic_SHA, CYRILLIC CAPITAL LETTER SHA */ \
   OP(L'Щ', LSHIFT(Key_RightBracket)) /* U+0429, XKB_KEY_Cyrillic_SHCHA, CYRILLIC CAPITAL LETTER SHCHA */ \
   OP(L'Ы', LSHIFT(Key_Y)) /* U+042b, XKB_KEY_Cyrillic_YERU, CYRILLIC CAPITAL LETTER YERU */ \
   OP(L'Ь', LSHIFT(Key_X)) /* U+042c, XKB_KEY_Cyrillic_SOFTSIGN, CYRILLIC CAPITAL LETTER SOFT SIGN */ \
   OP(L'Э', LSHIFT(Key_NonUsPound)) /* U+042d, XKB_KEY_Cyrillic_E, CYRILLIC CAPITAL LETTER E */ \
   OP(L'Ю', LSHIFT(Key_Backtick)) /* U+042e, XKB_KEY_Cyrillic_YU, CYRILLIC CAPITAL LETTER YU */ \
   OP(L'Я', LSHIFT(Key_A)) /* U+042f, XKB_KEY_Cyrillic_YA, CYRILLIC CAPITAL LETTER YA */ \
   OP(L'а', Key_Q) /* U+0430, XKB_KEY_Cyrillic_a, CYRILLIC SMALL LETTER A */ \
   OP(L'б', Key_B) /* U+0431, XKB_KEY_Cyrillic_be, CYRILLIC SMALL LETTER BE */ \
   OP(L'в', Key_Z) /* U+0432, XKB_KEY_Cyrillic_ve, CYRILLIC SMALL LETTER VE */ \
   OP(L'г', Key_G) /* U+0433, XKB_KEY_Cyrillic_ghe, CYRILLIC SMALL LETTER GHE */ \
   OP(L'д', Key_D) /* U+0434, XKB_KEY_Cyrillic_de, CYRILLIC SMALL LETTER DE */ \
   OP(L'е', Key_E) /* U+0435, XKB_KEY_Cyrillic_ie, CYRILLIC SMALL LETTER IE */ \
   OP(L'ж', Key_V) /* U+0436, XKB_KEY_Cyrillic_zhe, CYRILLIC SMALL LETTER ZHE */ \
   OP(L'з', Key_W) /* U+0437, XKB_KEY_Cyrillic_ze, CYRILLIC SMALL LETTER ZE */ \
   OP(L'и', Key_I) /* U+0438, XKB_KEY_Cyrillic_i, CYRILLIC SMALL LETTER I */ \
   OP(L'й', Key_J) /* U+0439, XKB_KEY_Cyrillic_shorti, CYRILLIC SMALL LETTER SHORT I */ \
   OP(L'к', Key_K) /* U+043a, XKB_KEY_Cyrillic_ka, CYRILLIC SMALL LETTER KA */ \
   OP(L'л', Key_L) /* U+043b, XKB_KEY_Cyrillic_el, CYRILLIC SMALL LETTER EL */ \
   OP(L'м', Key_Semicolon) /* U+043c, XKB_KEY_Cyrillic_em, CYRILLIC SMALL LETTER EM */ \
   OP(L'н', Key_N) /* U+043d, XKB_KEY_Cyrillic_en, CYRILLIC SMALL LETTER EN */ \
   OP(L'о', Key_O) /* U+043e, XKB_KEY_Cyrillic_o, CYRILLIC SMALL LETTER O */ \
   OP(L'п', Key_P) /* U+043f, XKB_KEY_Cyrillic_pe, CYRILLIC SMALL LETTER PE */ \
   OP(L'р', Key_R) /* U+0440, XKB_KEY_Cyrillic_er, CYRILLIC SMALL LETTER ER */ \
   OP(L'с', Key_S) /* U+0441, XKB_KEY_Cyrillic_es, CYRILLIC SMALL LETTER ES */ \
   OP(L'т', Key_T) /* U+0442, XKB_KEY_Cyrillic_te, CYRILLIC SMALL LETTER TE */ \
   OP(L'у', Key_U) /* U+0443, XKB_KEY_Cyrillic_u, CYRILLIC SMALL LETTER U */ \
   OP(L'ф', Key_F) /* U+0444, XKB_KEY_Cyrillic_ef, CYRILLIC SMALL LETTER EF */ \
   OP(L'х', Key_H) /* U+0445, XKB_KEY_Cyrillic_ha, CYRILLIC SMALL LETTER HA */ \
   OP(L'ц', Key_C) /* U+0446, XKB_KEY_Cyrillic_tse, CYRILLIC SMALL LETTER TSE */ \
   OP(L'ч', Key_Equals) /* U+0447, XKB_KEY_Cyrillic_che, CYRILLIC SMALL LETTER CHE */ \
   OP(L'ш', Key_LeftBracket) /* U+0448, XKB_KEY_Cyrillic_sha, CYRILLIC SMALL LETTER SHA */ \
   OP(L'щ', Key_RightBracket) /* U+0449, XKB_KEY_Cyrillic_shcha, CYRILLIC SMALL LETTER SHCHA */ \
   OP(L'ы', Key_Y) /* U+044b, XKB_KEY_Cyrillic_yeru, CYRILLIC SMALL LETTER YERU */ \
   OP(L'ь', Key_X) /* U+044c, XKB_KEY_Cyrillic_softsign, CYRILLIC SMALL LETTER SOFT SIGN */ \
   OP(L'э', Key_NonUsPound) /* U+044d, XKB_KEY_Cyrillic_e, CYRILLIC SMALL LETTER E */ \
   OP(L'ю', Key_Backtick) /* U+044e, XKB_KEY_Cyrillic_yu, CYRILLIC SMALL LETTER YU */ \
   OP(L'я', Key_A) /* U+044f, XKB_KEY_Cyrillic_ya, CYRILLIC SMALL LETTER YA */ \
   OP(L'™', RALT(LSHIFT(Key_8))) /* U+2122, XKB_KEY_trademark, TRADE MARK SIGN */ \
   OP(L'⅛', RALT(LSHIFT(Key_2))) /* U+215b, XKB_KEY_oneeighth, VULGAR FRACTION ONE EIGHTH */ \
   OP(L'⅜', RALT(LSHIFT(Key_5))) /* U+215c, XKB_KEY_threeeighths, VULGAR FRACTION THREE EIGHTHS */ \
   OP(L'⅝', RALT(LSHIFT(Key_6))) /* U+215d, XKB_KEY_fiveeighths, VULGAR FRACTION FIVE EIGHTHS */ \
   OP(L'⅞', RALT(LSHIFT(Key_7))) /* U+215e, XKB_KEY_seveneighths, VULGAR FRACTION SEVEN EIGHTHS */ \
   OP(L'─', RALT(Key_Comma)) /* U+2500, XKB_KEY_horizconnector, BOX DRAWINGS LIGHT HORIZONTAL */ \

#define _HOST_KEYMAP_NON_PRINTABLE(OP) \
   OP(XKB_KEY_0, LSHIFT(Key_0)) \
   OP(XKB_KEY_1, LSHIFT(Key_1)) \
   OP(XKB_KEY_2, LSHIFT(Key_2)) \
   OP(XKB_KEY_3, LSHIFT(Key_3)) \
   OP(XKB_KEY_4, LSHIFT(Key_4)) \
   OP(XKB_KEY_5, LSHIFT(Key_5)) \
   OP(XKB_KEY_6, LSHIFT(Key_6)) \
   OP(XKB_KEY_7, LSHIFT(Key_7)) \
   OP(XKB_KEY_8, LSHIFT(Key_8)) \
   OP(XKB_KEY_9, LSHIFT(Key_9)) \
   OP(XKB_KEY_Alt_L, Key_LeftAlt) /* XKB_KEY_Alt_L, Left alt  */ \
   OP(XKB_KEY_BackSpace, Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP(XKB_KEY_Break, LCTRL(Key_Pause)) /* XKB_KEY_Break */ \
   OP(XKB_KEY_Caps_Lock, Key_CapsLock) /* XKB_KEY_Caps_Lock, Caps lock  */ \
   OP(XKB_KEY_Control_L, Key_LeftControl) /* XKB_KEY_Control_L, Left control  */ \
   OP(XKB_KEY_Control_R, Key_RightControl) /* XKB_KEY_Control_R, Right control  */ \
   OP(XKB_KEY_Cyrillic_A, LSHIFT(Key_Q)) \
   OP(XKB_KEY_Cyrillic_BE, LSHIFT(Key_B)) \
   OP(XKB_KEY_Cyrillic_CHE, LSHIFT(Key_Equals)) \
   OP(XKB_KEY_Cyrillic_DE, LSHIFT(Key_D)) \
   OP(XKB_KEY_Cyrillic_E, LSHIFT(Key_NonUsPound)) \
   OP(XKB_KEY_Cyrillic_EF, LSHIFT(Key_F)) \
   OP(XKB_KEY_Cyrillic_EL, LSHIFT(Key_L)) \
   OP(XKB_KEY_Cyrillic_EM, LSHIFT(Key_Semicolon)) \
   OP(XKB_KEY_Cyrillic_EN, LSHIFT(Key_N)) \
   OP(XKB_KEY_Cyrillic_ER, LSHIFT(Key_R)) \
   OP(XKB_KEY_Cyrillic_ES, LSHIFT(Key_S)) \
   OP(XKB_KEY_Cyrillic_GHE, LSHIFT(Key_G)) \
   OP(XKB_KEY_Cyrillic_HA, LSHIFT(Key_H)) \
   OP(XKB_KEY_Cyrillic_I, LSHIFT(Key_I)) \
   OP(XKB_KEY_Cyrillic_IE, LSHIFT(Key_E)) \
   OP(XKB_KEY_Cyrillic_KA, LSHIFT(Key_K)) \
   OP(XKB_KEY_Cyrillic_O, LSHIFT(Key_O)) \
   OP(XKB_KEY_Cyrillic_PE, LSHIFT(Key_P)) \
   OP(XKB_KEY_Cyrillic_SHA, LSHIFT(Key_LeftBracket)) \
   OP(XKB_KEY_Cyrillic_SHCHA, LSHIFT(Key_RightBracket)) \
   OP(XKB_KEY_Cyrillic_SHORTI, LSHIFT(Key_J)) \
   OP(XKB_KEY_Cyrillic_SOFTSIGN, LSHIFT(Key_X)) \
   OP(XKB_KEY_Cyrillic_TE, LSHIFT(Key_T)) \
   OP(XKB_KEY_Cyrillic_TSE, LSHIFT(Key_C)) \
   OP(XKB_KEY_Cyrillic_U, LSHIFT(Key_U)) \
   OP(XKB_KEY_Cyrillic_VE, LSHIFT(Key_Z)) \
   OP(XKB_KEY_Cyrillic_YA, LSHIFT(Key_A)) \
   OP(XKB_KEY_Cyrillic_YERU, LSHIFT(Key_Y)) \
   OP(XKB_KEY_Cyrillic_YU, LSHIFT(Key_Backtick)) \
   OP(XKB_KEY_Cyrillic_ZE, LSHIFT(Key_W)) \
   OP(XKB_KEY_Cyrillic_ZHE, LSHIFT(Key_V)) \
   OP(XKB_KEY_Cyrillic_a, Key_Q) \
   OP(XKB_KEY_Cyrillic_be, Key_B) \
   OP(XKB_KEY_Cyrillic_che, Key_Equals) \
   OP(XKB_KEY_Cyrillic_de, Key_D) \
   OP(XKB_KEY_Cyrillic_e, Key_NonUsPound) \
   OP(XKB_KEY_Cyrillic_ef, Key_F) \
   OP(XKB_KEY_Cyrillic_el, Key_L) \
   OP(XKB_KEY_Cyrillic_em, Key_Semicolon) \
   OP(XKB_KEY_Cyrillic_en, Key_N) \
   OP(XKB_KEY_Cyrillic_er, Key_R) \
   OP(XKB_KEY_Cyrillic_es, Key_S) \
   OP(XKB_KEY_Cyrillic_ghe, Key_G) \
   OP(XKB_KEY_Cyrillic_ha, Key_H) \
   OP(XKB_KEY_Cyrillic_i, Key_I) \
   OP(XKB_KEY_Cyrillic_ie, Key_E) \
   OP(XKB_KEY_Cyrillic_ka, Key_K) \
   OP(XKB_KEY_Cyrillic_o, Key_O) \
   OP(XKB_KEY_Cyrillic_pe, Key_P) \
   OP(XKB_KEY_Cyrillic_sha, Key_LeftBracket) \
   OP(XKB_KEY_Cyrillic_shcha, Key_RightBracket) \
   OP(XKB_KEY_Cyrillic_shorti, Key_J) \
   OP(XKB_KEY_Cyrillic_softsign, Key_X) \
   OP(XKB_KEY_Cyrillic_te, Key_T) \
   OP(XKB_KEY_Cyrillic_tse, Key_C) \
   OP(XKB_KEY_Cyrillic_u, Key_U) \
   OP(XKB_KEY_Cyrillic_ve, Key_Z) \
   OP(XKB_KEY_Cyrillic_ya, Key_A) \
   OP(XKB_KEY_Cyrillic_yeru, Key_Y) \
   OP(XKB_KEY_Cyrillic_yu, Key_Backtick) \
   OP(XKB_KEY_Cyrillic_ze, Key_W) \
   OP(XKB_KEY_Cyrillic_zhe, Key_V) \
   OP(XKB_KEY_Delete, Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \
   OP(XKB_KEY_Down, Key_DownArrow) /* XKB_KEY_Down, Move down, down arrow  */ \
   OP(XKB_KEY_End, Key_End) /* XKB_KEY_End, EOL  */ \
   OP(XKB_KEY_Escape, Key_Escape) /* XKB_KEY_Escape */ \
   OP(XKB_KEY_F1, Key_F1) /* XKB_KEY_F1 */ \
   OP(XKB_KEY_F10, Key_F10) /* XKB_KEY_F10 */ \
   OP(XKB_KEY_F11, Key_F11) /* XKB_KEY_F11 */ \
   OP(XKB_KEY_F12, Key_F12) /* XKB_KEY_F12 */ \
   OP(XKB_KEY_F2, Key_F2) /* XKB_KEY_F2 */ \
   OP(XKB_KEY_F3, Key_F3) /* XKB_KEY_F3 */ \
   OP(XKB_KEY_F4, Key_F4) /* XKB_KEY_F4 */ \
   OP(XKB_KEY_F5, Key_F5) /* XKB_KEY_F5 */ \
   OP(XKB_KEY_F6, Key_F6) /* XKB_KEY_F6 */ \
   OP(XKB_KEY_F7, Key_F7) /* XKB_KEY_F7 */ \
   OP(XKB_KEY_F8, Key_F8) /* XKB_KEY_F8 */ \
   OP(XKB_KEY_F9, Key_F9) /* XKB_KEY_F9 */ \
   OP(XKB_KEY_Home, Key_Home) /* XKB_KEY_Home */ \
   OP(XKB_KEY_ISO_Left_Tab, LSHIFT(Key_Tab)) /* XKB_KEY_ISO_Left_Tab */ \
   OP(XKB_KEY_ISO_Level3_Shift, Key_RightAlt) /* XKB_KEY_ISO_Level3_Shift */ \
   OP(XKB_KEY_Insert, Key_Insert) /* XKB_KEY_Insert, Insert, insert here  */ \
   OP(XKB_KEY_KP_0, LSHIFT(Key_Keypad0)) /* XKB_KEY_KP_0 */ \
   OP(XKB_KEY_KP_1, LSHIFT(Key_Keypad1)) /* XKB_KEY_KP_1 */ \
   OP(XKB_KEY_KP_2, LSHIFT(Key_Keypad2)) /* XKB_KEY_KP_2 */ \
   OP(XKB_KEY_KP_3, LSHIFT(Key_Keypad3)) /* XKB_KEY_KP_3 */ \
   OP(XKB_KEY_KP_4, LSHIFT(Key_Keypad4)) /* XKB_KEY_KP_4 */ \
   OP(XKB_KEY_KP_5, LSHIFT(Key_Keypad5)) /* XKB_KEY_KP_5 */ \
   OP(XKB_KEY_KP_6, LSHIFT(Key_Keypad6)) /* XKB_KEY_KP_6 */ \
   OP(XKB_KEY_KP_7, LSHIFT(Key_Keypad7)) /* XKB_KEY_KP_7 */ \
   OP(XKB_KEY_KP_8, LSHIFT(Key_Keypad8)) /* XKB_KEY_KP_8 */ \
   OP(XKB_KEY_KP_9, LSHIFT(Key_Keypad9)) /* XKB_KEY_KP_9 */ \
   OP(XKB_KEY_KP_Add, Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(XKB_KEY_KP_Begin, Key_Keypad5) /* XKB_KEY_KP_Begin */ \
   OP(XKB_KEY_KP_Decimal, LSHIFT(Key_KeypadDot)) /* XKB_KEY_KP_Decimal */ \
   OP(XKB_KEY_KP_Delete, Key_KeypadDot) /* XKB_KEY_KP_Delete */ \
   OP(XKB_KEY_KP_Divide, Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP(XKB_KEY_KP_Down, Key_Keypad2) /* XKB_KEY_KP_Down */ \
   OP(XKB_KEY_KP_End, Key_Keypad1) /* XKB_KEY_KP_End */ \
   OP(XKB_KEY_KP_Enter, Key_KeypadEnter) /* XKB_KEY_KP_Enter, Enter  */ \
   OP(XKB_KEY_KP_Home, Key_Keypad7) /* XKB_KEY_KP_Home */ \
   OP(XKB_KEY_KP_Insert, Key_Keypad0) /* XKB_KEY_KP_Insert */ \
   OP(XKB_KEY_KP_Left, Key_Keypad4) /* XKB_KEY_KP_Left */ \
   OP(XKB_KEY_KP_Multiply, Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP(XKB_KEY_KP_Next, Key_Keypad3) /* XKB_KEY_KP_Next */ \
   OP(XKB_KEY_KP_Prior, Key_Keypad9) /* XKB_KEY_KP_Prior */ \
   OP(XKB_KEY_KP_Right, Key_Keypad6) /* XKB_KEY_KP_Right */ \
   OP(XKB_KEY_KP_Subtract, Key_KeypadSubtract) /* XKB_KEY_KP_Subtract */ \
   OP(XKB_KEY_KP_Up, Key_Keypad8) /* XKB_KEY_KP_Up */ \
   OP(XKB_KEY_Left, Key_LeftArrow) /* XKB_KEY_Left, Move left, left arrow  */ \
   OP(XKB_KEY_Menu, Key_PcApplication) /* XKB_KEY_Menu */ \
   OP(XKB_KEY_Meta_L, LSHIFT(Key_LeftAlt)) /* XKB_KEY_Meta_L, Left meta  */ \
   OP(XKB_KEY_Next, Key_PageDown) /* XKB_KEY_Next, Next  */ \
   OP(XKB_KEY_Num_Lock, Key_KeypadNumLock) /* XKB_KEY_Num_Lock */ \
   OP(XKB_KEY_Pause, Key_Pause) /* XKB_KEY_Pause, Pause, hold  */ \
   OP(XKB_KEY_Print, Key_PrintScreen) /* XKB_KEY_Print */ \
   OP(XKB_KEY_Prior, Key_PageUp) /* XKB_KEY_Prior, Prior, previous  */ \
   OP(XKB_KEY_Return, Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP(XKB_KEY_Right, Key_RightArrow) /* XKB_KEY_Right, Move right, right arrow  */ \
   OP(XKB_KEY_Scroll_Lock, Key_ScrollLock) /* XKB_KEY_Scroll_Lock */ \
   OP(XKB_KEY_Shift_L, Key_LeftShift) /* XKB_KEY_Shift_L, Left shift  */ \
   OP(XKB_KEY_Shift_R, Key_RightShift) /* XKB_KEY_Shift_R, Right shift  */ \
   OP(XKB_KEY_Super_L, Key_LeftGui) /* XKB_KEY_Super_L, Left super  */ \
   OP(XKB_KEY_Super_R, Key_RightGui) /* XKB_KEY_Super_R, Right super  */ \
   OP(XKB_KEY_Sys_Req, LALT(Key_PrintScreen)) /* XKB_KEY_Sys_Req */ \
   OP(XKB_KEY_Tab, Key_Tab) /* XKB_KEY_Tab */ \
   OP(XKB_KEY_Up, Key_UpArrow) /* XKB_KEY_Up, Move up, up arrow  */ \
   OP(XKB_KEY_XF86ClearGrab, LCTRL(LALT(Key_KeypadMultiply))) /* XKB_KEY_XF86ClearGrab, kill application with grab  */ \
   OP(XKB_KEY_XF86Next_VMode, LCTRL(LALT(Key_KeypadAdd))) /* XKB_KEY_XF86Next_VMode, next video mode available   */ \
   OP(XKB_KEY_XF86Prev_VMode, LCTRL(LALT(Key_KeypadSubtract))) /* XKB_KEY_XF86Prev_VMode, prev. video mode available  */ \
   OP(XKB_KEY_XF86Switch_VT_1, LCTRL(LALT(Key_F1))) /* XKB_KEY_XF86Switch_VT_1 */ \
   OP(XKB_KEY_XF86Switch_VT_10, LCTRL(LALT(Key_F10))) /* XKB_KEY_XF86Switch_VT_10 */ \
   OP(XKB_KEY_XF86Switch_VT_11, LCTRL(LALT(Key_F11))) /* XKB_KEY_XF86Switch_VT_11 */ \
   OP(XKB_KEY_XF86Switch_VT_12, LCTRL(LALT(Key_F12))) /* XKB_KEY_XF86Switch_VT_12 */ \
   OP(XKB_KEY_XF86Switch_VT_2, LCTRL(LALT(Key_F2))) /* XKB_KEY_XF86Switch_VT_2 */ \
   OP(XKB_KEY_XF86Switch_VT_3, LCTRL(LALT(Key_F3))) /* XKB_KEY_XF86Switch_VT_3 */ \
   OP(XKB_KEY_XF86Switch_VT_4, LCTRL(LALT(Key_F4))) /* XKB_KEY_XF86Switch_VT_4 */ \
   OP(XKB_KEY_XF86Switch_VT_5, LCTRL(LALT(Key_F5))) /* XKB_KEY_XF86Switch_VT_5 */ \
   OP(XKB_KEY_XF86Switch_VT_6, LCTRL(LALT(Key_F6))) /* XKB_KEY_XF86Switch_VT_6 */ \
   OP(XKB_KEY_XF86Switch_VT_7, LCTRL(LALT(Key_F7))) /* XKB_KEY_XF86Switch_VT_7 */ \
   OP(XKB_KEY_XF86Switch_VT_8, LCTRL(LALT(Key_F8))) /* XKB_KEY_XF86Switch_VT_8 */ \
   OP(XKB_KEY_XF86Switch_VT_9, LCTRL(LALT(Key_F9))) /* XKB_KEY_XF86Switch_VT_9 */ \
   OP(XKB_KEY_XF86Ungrab, LCTRL(LALT(Key_KeypadDivide))) /* XKB_KEY_XF86Ungrab, force ungrab                */ \
   OP(XKB_KEY_acute, RALT(Key_M)) \
   OP(XKB_KEY_agrave, Key_0) \
   OP(XKB_KEY_ampersand, Key_1) \
   OP(XKB_KEY_apostrophe, Key_4) /* XKB_KEY_quoteright, deprecated  */ \
   OP(XKB_KEY_asciicircum, RALT(Key_9)) \
   OP(XKB_KEY_asciitilde, RALT(Key_2)) \
   OP(XKB_KEY_at, RALT(Key_0)) \
   OP(XKB_KEY_backslash, RALT(Key_8)) \
   OP(XKB_KEY_bar, Key_NonUsBackslashAndPipe) \
   OP(XKB_KEY_braceleft, RALT(Key_4)) \
   OP(XKB_KEY_braceright, RALT(Key_Equals)) \
   OP(XKB_KEY_bracketleft, RALT(Key_5)) \
   OP(XKB_KEY_bracketright, RALT(Key_Minus)) \
   OP(XKB_KEY_brokenbar, LSHIFT(Key_NonUsBackslashAndPipe)) \
   OP(XKB_KEY_caron, RALT(LSHIFT(Key_Quote))) \
   OP(XKB_KEY_ccedilla, Key_9) \
   OP(XKB_KEY_colon, Key_Period) \
   OP(XKB_KEY_comma, Key_M) \
   OP(XKB_KEY_dead_abovedot, RALT(LSHIFT(Key_Slash))) /* XKB_KEY_dead_abovedot */ \
   OP(XKB_KEY_dead_belowdot, RALT(Key_Slash)) /* XKB_KEY_dead_belowdot */ \
   OP(XKB_KEY_dead_ogonek, RALT(LSHIFT(Key_Equals))) /* XKB_KEY_dead_ogonek */ \
   OP(XKB_KEY_degree, LSHIFT(Key_Minus)) \
   OP(XKB_KEY_division, RALT(LSHIFT(Key_Period))) \
   OP(XKB_KEY_dollar, RALT(LSHIFT(Key_4))) \
   OP(XKB_KEY_doubleacute, RALT(LSHIFT(Key_M))) \
   OP(XKB_KEY_eacute, Key_2) \
   OP(XKB_KEY_egrave, Key_7) \
   OP(XKB_KEY_exclam, Key_Slash) \
   OP(XKB_KEY_exclamdown, RALT(LSHIFT(Key_1))) \
   OP(XKB_KEY_fiveeighths, RALT(LSHIFT(Key_6))) \
   OP(XKB_KEY_grave, RALT(Key_7)) /* XKB_KEY_quoteleft, deprecated  */ \
   OP(XKB_KEY_horizconnector, RALT(Key_Comma)) \
   OP(XKB_KEY_minus, Key_6) \
   OP(XKB_KEY_multiply, RALT(LSHIFT(Key_Comma))) \
   OP(XKB_KEY_numbersign, RALT(Key_3)) \
   OP(XKB_KEY_oneeighth, RALT(LSHIFT(Key_2))) \
   OP(XKB_KEY_onesuperior, RALT(Key_1)) \
   OP(XKB_KEY_parenleft, Key_5) \
   OP(XKB_KEY_parenright, Key_Minus) \
   OP(XKB_KEY_percent, LSHIFT(Key_Quote)) \
   OP(XKB_KEY_period, LSHIFT(Key_Comma)) \
   OP(XKB_KEY_periodcentered, RALT(Key_Period)) \
   OP(XKB_KEY_plusminus, RALT(LSHIFT(Key_9))) \
   OP(XKB_KEY_question, LSHIFT(Key_M)) \
   OP(XKB_KEY_questiondown, RALT(LSHIFT(Key_Minus))) \
   OP(XKB_KEY_quotedbl, Key_3) \
   OP(XKB_KEY_section, LSHIFT(Key_Slash)) \
   OP(XKB_KEY_semicolon, Key_Comma) \
   OP(XKB_KEY_seveneighths, RALT(LSHIFT(Key_7))) \
   OP(XKB_KEY_slash, LSHIFT(Key_Period)) \
   OP(XKB_KEY_space, Key_Spacebar) \
   OP(XKB_KEY_sterling, RALT(LSHIFT(Key_3))) \
   OP(XKB_KEY_threeeighths, RALT(LSHIFT(Key_5))) \
   OP(XKB_KEY_trademark, RALT(LSHIFT(Key_8))) \
   OP(XKB_KEY_ugrave, Key_Quote) \
   OP(XKB_KEY_underscore, Key_8) \


namespace kaleidoscope {
namespace host_keymap {
namespace linux {
namespace ru {
namespace phonetic_azerty {

HOST_KEYMAP_LINUX(
  _HOST_KEYMAP_ASCII,
  _HOST_KEYMAP_UNICODE,
  _HOST_KEYMAP_NON_PRINTABLE
)

} // namespace phonetic_azerty
} // namespace ru
} // namespace linux
} // namespace host_keymap
} // namespace kaleidoscope

#undef _HOST_KEYMAP_ASCII
#undef _HOST_KEYMAP_UNICODE
#undef _HOST_KEYMAP_NON_PRINTABLE

