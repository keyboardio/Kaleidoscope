/* Kaleidoscope - Firmware for computer input devices
 * Copyright (C) 2013-2019  Keyboard.io, Inc.
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "kaleidoscope/host_keymap/linux.h"

// This file was autogenerated by host_keymap.
// Its content is based on information provided by the XKB X11 system
// collected with the extraordinary libxkbcommon.

// layout: in
// variant: tel-sarala

#define _HOST_KEYMAP_ASCII(OP) \
   OP('\b', Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP('\t', Key_Tab) /* XKB_KEY_Tab */ \
   OP('\r', Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP('\e', Key_Escape) /* XKB_KEY_Escape */ \
   OP(' ', Key_Spacebar) /* U+0020, XKB_KEY_space, SPACE */ \
   OP('!', LSHIFT(Key_1)) /* U+0021, XKB_KEY_exclam, EXCLAMATION MARK */ \
   OP('"', LSHIFT(Key_Quote)) /* U+0022, XKB_KEY_quotedbl, QUOTATION MARK */ \
   OP('#', LSHIFT(Key_3)) /* U+0023, XKB_KEY_numbersign, NUMBER SIGN */ \
   OP('$', LSHIFT(Key_4)) /* U+0024, XKB_KEY_dollar, DOLLAR SIGN */ \
   OP('%', LSHIFT(Key_5)) /* U+0025, XKB_KEY_percent, PERCENT SIGN */ \
   OP('&', LSHIFT(Key_7)) /* U+0026, XKB_KEY_ampersand, AMPERSAND */ \
   OP('\'', Key_Quote) /* U+0027, XKB_KEY_apostrophe, APOSTROPHE */ \
   OP('(', LSHIFT(Key_9)) /* U+0028, XKB_KEY_parenleft, LEFT PARENTHESIS */ \
   OP(')', LSHIFT(Key_0)) /* U+0029, XKB_KEY_parenright, RIGHT PARENTHESIS */ \
   OP('*', Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP('+', Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(',', Key_Comma) /* U+002c, XKB_KEY_comma, COMMA */ \
   OP('-', Key_Minus) /* XKB_KEY_KP_Subtract */ \
   OP('.', Key_Period) /* U+002e, XKB_KEY_period, FULL STOP */ \
   OP('/', Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP('0', Key_0) /* XKB_KEY_KP_0 */ \
   OP('1', Key_1) /* XKB_KEY_KP_1 */ \
   OP('2', Key_2) /* XKB_KEY_KP_2 */ \
   OP('3', Key_3) /* XKB_KEY_KP_3 */ \
   OP('4', Key_4) /* XKB_KEY_KP_4 */ \
   OP('5', Key_5) /* XKB_KEY_KP_5 */ \
   OP('6', Key_6) /* XKB_KEY_KP_6 */ \
   OP('7', Key_7) /* XKB_KEY_KP_7 */ \
   OP('8', Key_8) /* XKB_KEY_KP_8 */ \
   OP('9', Key_9) /* XKB_KEY_KP_9 */ \
   OP(':', RALT(LSHIFT(Key_Semicolon))) /* U+003a, XKB_KEY_colon, COLON */ \
   OP(';', RALT(Key_Semicolon)) /* U+003b, XKB_KEY_semicolon, SEMICOLON */ \
   OP('<', Key_NonUsBackslashAndPipe) /* U+003c, XKB_KEY_less, LESS-THAN SIGN */ \
   OP('=', Key_Equals) /* XKB_KEY_KP_Equal, Equals  */ \
   OP('>', RALT(Key_Period)) /* U+003e, XKB_KEY_rightcaret, GREATER-THAN SIGN */ \
   OP('?', LSHIFT(Key_Slash)) /* U+003f, XKB_KEY_question, QUESTION MARK */ \
   OP('@', LSHIFT(Key_2)) /* U+0040, XKB_KEY_at, COMMERCIAL AT */ \
   OP('[', RALT(Key_LeftBracket)) /* U+005b, XKB_KEY_bracketleft, LEFT SQUARE BRACKET */ \
   OP(']', RALT(Key_RightBracket)) /* U+005d, XKB_KEY_bracketright, RIGHT SQUARE BRACKET */ \
   OP('^', LSHIFT(Key_6)) /* U+005e, XKB_KEY_asciicircum, CIRCUMFLEX ACCENT */ \
   OP('_', LSHIFT(Key_Minus)) /* U+005f, XKB_KEY_underbar, LOW LINE */ \
   OP('`', RALT(Key_Backtick)) /* U+0060, XKB_KEY_grave, GRAVE ACCENT */ \
   OP('{', RALT(LSHIFT(Key_LeftBracket))) /* U+007b, XKB_KEY_braceleft, LEFT CURLY BRACKET */ \
   OP('|', RALT(Key_NonUsBackslashAndPipe)) /* U+007c, XKB_KEY_bar, VERTICAL LINE */ \
   OP('}', RALT(LSHIFT(Key_RightBracket))) /* U+007d, XKB_KEY_braceright, RIGHT CURLY BRACKET */ \
   OP('~', RALT(LSHIFT(Key_Backtick))) /* U+007e, XKB_KEY_asciitilde, TILDE */ \
   OP('', Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \

#define _HOST_KEYMAP_UNICODE(OP) \
   OP(L'\b', Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP(L'\t', Key_Tab) /* XKB_KEY_Tab */ \
   OP(L'\r', Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP(L'\e', Key_Escape) /* XKB_KEY_Escape */ \
   OP(L' ', Key_Spacebar) /* U+0020, XKB_KEY_space, SPACE */ \
   OP(L'!', LSHIFT(Key_1)) /* U+0021, XKB_KEY_exclam, EXCLAMATION MARK */ \
   OP(L'"', LSHIFT(Key_Quote)) /* U+0022, XKB_KEY_quotedbl, QUOTATION MARK */ \
   OP(L'#', LSHIFT(Key_3)) /* U+0023, XKB_KEY_numbersign, NUMBER SIGN */ \
   OP(L'$', LSHIFT(Key_4)) /* U+0024, XKB_KEY_dollar, DOLLAR SIGN */ \
   OP(L'%', LSHIFT(Key_5)) /* U+0025, XKB_KEY_percent, PERCENT SIGN */ \
   OP(L'&', LSHIFT(Key_7)) /* U+0026, XKB_KEY_ampersand, AMPERSAND */ \
   OP(L'\'', Key_Quote) /* U+0027, XKB_KEY_apostrophe, APOSTROPHE */ \
   OP(L'(', LSHIFT(Key_9)) /* U+0028, XKB_KEY_parenleft, LEFT PARENTHESIS */ \
   OP(L')', LSHIFT(Key_0)) /* U+0029, XKB_KEY_parenright, RIGHT PARENTHESIS */ \
   OP(L'*', Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP(L'+', Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(L',', Key_Comma) /* U+002c, XKB_KEY_comma, COMMA */ \
   OP(L'-', Key_Minus) /* XKB_KEY_KP_Subtract */ \
   OP(L'.', Key_Period) /* U+002e, XKB_KEY_period, FULL STOP */ \
   OP(L'/', Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP(L'0', Key_0) /* XKB_KEY_KP_0 */ \
   OP(L'1', Key_1) /* XKB_KEY_KP_1 */ \
   OP(L'2', Key_2) /* XKB_KEY_KP_2 */ \
   OP(L'3', Key_3) /* XKB_KEY_KP_3 */ \
   OP(L'4', Key_4) /* XKB_KEY_KP_4 */ \
   OP(L'5', Key_5) /* XKB_KEY_KP_5 */ \
   OP(L'6', Key_6) /* XKB_KEY_KP_6 */ \
   OP(L'7', Key_7) /* XKB_KEY_KP_7 */ \
   OP(L'8', Key_8) /* XKB_KEY_KP_8 */ \
   OP(L'9', Key_9) /* XKB_KEY_KP_9 */ \
   OP(L':', RALT(LSHIFT(Key_Semicolon))) /* U+003a, XKB_KEY_colon, COLON */ \
   OP(L';', RALT(Key_Semicolon)) /* U+003b, XKB_KEY_semicolon, SEMICOLON */ \
   OP(L'<', Key_NonUsBackslashAndPipe) /* U+003c, XKB_KEY_less, LESS-THAN SIGN */ \
   OP(L'=', Key_Equals) /* XKB_KEY_KP_Equal, Equals  */ \
   OP(L'>', RALT(Key_Period)) /* U+003e, XKB_KEY_rightcaret, GREATER-THAN SIGN */ \
   OP(L'?', LSHIFT(Key_Slash)) /* U+003f, XKB_KEY_question, QUESTION MARK */ \
   OP(L'@', LSHIFT(Key_2)) /* U+0040, XKB_KEY_at, COMMERCIAL AT */ \
   OP(L'[', RALT(Key_LeftBracket)) /* U+005b, XKB_KEY_bracketleft, LEFT SQUARE BRACKET */ \
   OP(L']', RALT(Key_RightBracket)) /* U+005d, XKB_KEY_bracketright, RIGHT SQUARE BRACKET */ \
   OP(L'^', LSHIFT(Key_6)) /* U+005e, XKB_KEY_asciicircum, CIRCUMFLEX ACCENT */ \
   OP(L'_', LSHIFT(Key_Minus)) /* U+005f, XKB_KEY_underbar, LOW LINE */ \
   OP(L'`', RALT(Key_Backtick)) /* U+0060, XKB_KEY_grave, GRAVE ACCENT */ \
   OP(L'{', RALT(LSHIFT(Key_LeftBracket))) /* U+007b, XKB_KEY_braceleft, LEFT CURLY BRACKET */ \
   OP(L'|', RALT(Key_NonUsBackslashAndPipe)) /* U+007c, XKB_KEY_bar, VERTICAL LINE */ \
   OP(L'}', RALT(LSHIFT(Key_RightBracket))) /* U+007d, XKB_KEY_braceright, RIGHT CURLY BRACKET */ \
   OP(L'~', RALT(LSHIFT(Key_Backtick))) /* U+007e, XKB_KEY_asciitilde, TILDE */ \
   OP(L'', Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \
   OP(L'¦', RALT(LSHIFT(Key_NonUsBackslashAndPipe))) /* U+00a6, XKB_KEY_brokenbar, BROKEN BAR */ \
   OP(L'।', RALT(Key_NonUsPound)) \
   OP(L'॥', RALT(LSHIFT(Key_NonUsPound))) \
   OP(L'ఁ', LSHIFT(Key_M)) \
   OP(L'ం', Key_S) \
   OP(L'ః', LSHIFT(Key_S)) \
   OP(L'అ', LSHIFT(Key_F)) \
   OP(L'ఆ', LSHIFT(Key_J)) \
   OP(L'ఇ', LSHIFT(Key_I)) \
   OP(L'ఈ', LSHIFT(Key_Y)) \
   OP(L'ఉ', LSHIFT(Key_U)) \
   OP(L'ఊ', LSHIFT(Key_X)) \
   OP(L'ఋ', LSHIFT(Key_Backtick)) \
   OP(L'ఌ', RALT(Key_L)) \
   OP(L'ఎ', LSHIFT(Key_Q)) \
   OP(L'ఏ', LSHIFT(Key_E)) \
   OP(L'ఐ', LSHIFT(Key_RightBracket)) \
   OP(L'ఒ', LSHIFT(Key_Z)) \
   OP(L'ఓ', LSHIFT(Key_O)) \
   OP(L'ఔ', LSHIFT(Key_NonUsPound)) \
   OP(L'క', Key_K) \
   OP(L'ఖ', LSHIFT(Key_K)) \
   OP(L'గ', Key_G) \
   OP(L'ఘ', LSHIFT(Key_G)) \
   OP(L'ఙ', LSHIFT(Key_Period)) \
   OP(L'చ', Key_H) \
   OP(L'ఛ', LSHIFT(Key_H)) \
   OP(L'జ', Key_LeftBracket) \
   OP(L'ఝ', LSHIFT(Key_LeftBracket)) \
   OP(L'ఞ', LSHIFT(Key_Comma)) \
   OP(L'ట', Key_Semicolon) \
   OP(L'ఠ', LSHIFT(Key_Semicolon)) \
   OP(L'డ', Key_C) \
   OP(L'ఢ', LSHIFT(Key_C)) \
   OP(L'ణ', LSHIFT(Key_N)) \
   OP(L'త', Key_T) \
   OP(L'థ', LSHIFT(Key_T)) \
   OP(L'ద', Key_D) \
   OP(L'ధ', LSHIFT(Key_D)) \
   OP(L'న', Key_N) \
   OP(L'ప', Key_P) \
   OP(L'ఫ', LSHIFT(Key_P)) \
   OP(L'బ', Key_B) \
   OP(L'భ', LSHIFT(Key_B)) \
   OP(L'మ', Key_M) \
   OP(L'య', Key_A) \
   OP(L'ర', Key_R) \
   OP(L'ఱ', LSHIFT(Key_R)) \
   OP(L'ల', Key_L) \
   OP(L'ళ', LSHIFT(Key_L)) \
   OP(L'ఴ', RALT(LSHIFT(Key_Q))) \
   OP(L'వ', Key_V) \
   OP(L'శ', Key_Slash) \
   OP(L'ష', LSHIFT(Key_W)) \
   OP(L'స', Key_W) \
   OP(L'హ', LSHIFT(Key_V)) \
   OP(L'ఽ', LSHIFT(Key_A)) \
   OP(L'ా', Key_J) \
   OP(L'ి', Key_I) \
   OP(L'ీ', Key_Y) \
   OP(L'ు', Key_U) \
   OP(L'ూ', Key_X) \
   OP(L'ృ', Key_Backtick) \
   OP(L'ౄ', RALT(Key_Q)) \
   OP(L'ె', Key_Q) \
   OP(L'ే', Key_E) \
   OP(L'ై', Key_RightBracket) \
   OP(L'ొ', Key_Z) \
   OP(L'ో', Key_O) \
   OP(L'ౌ', Key_NonUsPound) \
   OP(L'్', Key_F) \
   OP(L'ౕ', RALT(LSHIFT(Key_0))) \
   OP(L'ౖ', RALT(LSHIFT(Key_Minus))) \
   OP(L'ౘ', RALT(Key_H)) \
   OP(L'ౙ', RALT(LSHIFT(Key_H))) \
   OP(L'ౠ', RALT(LSHIFT(Key_R))) \
   OP(L'ౡ', RALT(LSHIFT(Key_L))) \
   OP(L'ౢ', RALT(Key_K)) \
   OP(L'ౣ', RALT(LSHIFT(Key_K))) \
   OP(L'౦', RALT(Key_0)) \
   OP(L'౧', RALT(Key_1)) \
   OP(L'౨', RALT(Key_2)) \
   OP(L'౩', RALT(Key_3)) \
   OP(L'౪', RALT(Key_4)) \
   OP(L'౫', RALT(Key_5)) \
   OP(L'౬', RALT(Key_6)) \
   OP(L'౭', RALT(Key_7)) \
   OP(L'౮', RALT(Key_8)) \
   OP(L'౯', RALT(Key_9)) \
   OP(L'౸', RALT(LSHIFT(Key_1))) \
   OP(L'౹', RALT(LSHIFT(Key_2))) \
   OP(L'౺', RALT(LSHIFT(Key_3))) \
   OP(L'౻', RALT(LSHIFT(Key_4))) \
   OP(L'౼', RALT(LSHIFT(Key_5))) \
   OP(L'౽', RALT(LSHIFT(Key_6))) \
   OP(L'౾', RALT(LSHIFT(Key_7))) \
   OP(L'౿', RALT(LSHIFT(Key_8))) \
   OP(L'₹', RALT(LSHIFT(Key_9))) \

#define _HOST_KEYMAP_NON_PRINTABLE(OP) \
   OP(XKB_KEY_Alt_L, Key_LeftAlt) /* XKB_KEY_Alt_L, Left alt  */ \
   OP(XKB_KEY_BackSpace, Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP(XKB_KEY_Break, LCTRL(Key_Pause)) /* XKB_KEY_Break */ \
   OP(XKB_KEY_Caps_Lock, Key_CapsLock) /* XKB_KEY_Caps_Lock, Caps lock  */ \
   OP(XKB_KEY_Control_L, Key_LeftControl) /* XKB_KEY_Control_L, Left control  */ \
   OP(XKB_KEY_Control_R, Key_RightControl) /* XKB_KEY_Control_R, Right control  */ \
   OP(XKB_KEY_Delete, Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \
   OP(XKB_KEY_Down, Key_DownArrow) /* XKB_KEY_Down, Move down, down arrow  */ \
   OP(XKB_KEY_End, Key_End) /* XKB_KEY_End, EOL  */ \
   OP(XKB_KEY_Escape, Key_Escape) /* XKB_KEY_Escape */ \
   OP(XKB_KEY_F1, Key_F1) /* XKB_KEY_F1 */ \
   OP(XKB_KEY_F10, Key_F10) /* XKB_KEY_F10 */ \
   OP(XKB_KEY_F11, Key_F11) /* XKB_KEY_F11 */ \
   OP(XKB_KEY_F12, Key_F12) /* XKB_KEY_F12 */ \
   OP(XKB_KEY_F2, Key_F2) /* XKB_KEY_F2 */ \
   OP(XKB_KEY_F3, Key_F3) /* XKB_KEY_F3 */ \
   OP(XKB_KEY_F4, Key_F4) /* XKB_KEY_F4 */ \
   OP(XKB_KEY_F5, Key_F5) /* XKB_KEY_F5 */ \
   OP(XKB_KEY_F6, Key_F6) /* XKB_KEY_F6 */ \
   OP(XKB_KEY_F7, Key_F7) /* XKB_KEY_F7 */ \
   OP(XKB_KEY_F8, Key_F8) /* XKB_KEY_F8 */ \
   OP(XKB_KEY_F9, Key_F9) /* XKB_KEY_F9 */ \
   OP(XKB_KEY_Home, Key_Home) /* XKB_KEY_Home */ \
   OP(XKB_KEY_ISO_Left_Tab, LSHIFT(Key_Tab)) /* XKB_KEY_ISO_Left_Tab */ \
   OP(XKB_KEY_ISO_Level3_Shift, Key_RightAlt) /* XKB_KEY_ISO_Level3_Shift */ \
   OP(XKB_KEY_Insert, Key_Insert) /* XKB_KEY_Insert, Insert, insert here  */ \
   OP(XKB_KEY_KP_0, Key_0) /* XKB_KEY_KP_0 */ \
   OP(XKB_KEY_KP_1, Key_1) /* XKB_KEY_KP_1 */ \
   OP(XKB_KEY_KP_2, Key_2) /* XKB_KEY_KP_2 */ \
   OP(XKB_KEY_KP_3, Key_3) /* XKB_KEY_KP_3 */ \
   OP(XKB_KEY_KP_4, Key_4) /* XKB_KEY_KP_4 */ \
   OP(XKB_KEY_KP_5, Key_5) /* XKB_KEY_KP_5 */ \
   OP(XKB_KEY_KP_6, Key_6) /* XKB_KEY_KP_6 */ \
   OP(XKB_KEY_KP_7, Key_7) /* XKB_KEY_KP_7 */ \
   OP(XKB_KEY_KP_8, Key_8) /* XKB_KEY_KP_8 */ \
   OP(XKB_KEY_KP_9, Key_9) /* XKB_KEY_KP_9 */ \
   OP(XKB_KEY_KP_Add, Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(XKB_KEY_KP_Begin, Key_Keypad5) /* XKB_KEY_KP_Begin */ \
   OP(XKB_KEY_KP_Decimal, LSHIFT(Key_KeypadDot)) /* XKB_KEY_KP_Decimal */ \
   OP(XKB_KEY_KP_Delete, Key_KeypadDot) /* XKB_KEY_KP_Delete */ \
   OP(XKB_KEY_KP_Divide, Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP(XKB_KEY_KP_Down, Key_Keypad2) /* XKB_KEY_KP_Down */ \
   OP(XKB_KEY_KP_End, Key_Keypad1) /* XKB_KEY_KP_End */ \
   OP(XKB_KEY_KP_Enter, Key_KeypadEnter) /* XKB_KEY_KP_Enter, Enter  */ \
   OP(XKB_KEY_KP_Equal, Key_Equals) /* XKB_KEY_KP_Equal, Equals  */ \
   OP(XKB_KEY_KP_Home, Key_Keypad7) /* XKB_KEY_KP_Home */ \
   OP(XKB_KEY_KP_Insert, Key_Keypad0) /* XKB_KEY_KP_Insert */ \
   OP(XKB_KEY_KP_Left, Key_Keypad4) /* XKB_KEY_KP_Left */ \
   OP(XKB_KEY_KP_Multiply, Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP(XKB_KEY_KP_Next, Key_Keypad3) /* XKB_KEY_KP_Next */ \
   OP(XKB_KEY_KP_Prior, Key_Keypad9) /* XKB_KEY_KP_Prior */ \
   OP(XKB_KEY_KP_Right, Key_Keypad6) /* XKB_KEY_KP_Right */ \
   OP(XKB_KEY_KP_Subtract, Key_Minus) /* XKB_KEY_KP_Subtract */ \
   OP(XKB_KEY_KP_Up, Key_Keypad8) /* XKB_KEY_KP_Up */ \
   OP(XKB_KEY_Left, Key_LeftArrow) /* XKB_KEY_Left, Move left, left arrow  */ \
   OP(XKB_KEY_Menu, Key_PcApplication) /* XKB_KEY_Menu */ \
   OP(XKB_KEY_Meta_L, LSHIFT(Key_LeftAlt)) /* XKB_KEY_Meta_L, Left meta  */ \
   OP(XKB_KEY_Next, Key_PageDown) /* XKB_KEY_Next, Next  */ \
   OP(XKB_KEY_Num_Lock, Key_KeypadNumLock) /* XKB_KEY_Num_Lock */ \
   OP(XKB_KEY_Pause, Key_Pause) /* XKB_KEY_Pause, Pause, hold  */ \
   OP(XKB_KEY_Print, Key_PrintScreen) /* XKB_KEY_Print */ \
   OP(XKB_KEY_Prior, Key_PageUp) /* XKB_KEY_Prior, Prior, previous  */ \
   OP(XKB_KEY_Return, Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP(XKB_KEY_Right, Key_RightArrow) /* XKB_KEY_Right, Move right, right arrow  */ \
   OP(XKB_KEY_Scroll_Lock, Key_ScrollLock) /* XKB_KEY_Scroll_Lock */ \
   OP(XKB_KEY_Shift_L, Key_LeftShift) /* XKB_KEY_Shift_L, Left shift  */ \
   OP(XKB_KEY_Shift_R, Key_RightShift) /* XKB_KEY_Shift_R, Right shift  */ \
   OP(XKB_KEY_Super_L, Key_LeftGui) /* XKB_KEY_Super_L, Left super  */ \
   OP(XKB_KEY_Super_R, Key_RightGui) /* XKB_KEY_Super_R, Right super  */ \
   OP(XKB_KEY_Sys_Req, LALT(Key_PrintScreen)) /* XKB_KEY_Sys_Req */ \
   OP(XKB_KEY_Tab, Key_Tab) /* XKB_KEY_Tab */ \
   OP(XKB_KEY_Up, Key_UpArrow) /* XKB_KEY_Up, Move up, up arrow  */ \
   OP(XKB_KEY_XF86ClearGrab, LCTRL(LALT(Key_KeypadMultiply))) /* XKB_KEY_XF86ClearGrab, kill application with grab  */ \
   OP(XKB_KEY_XF86Next_VMode, LCTRL(LALT(Key_KeypadAdd))) /* XKB_KEY_XF86Next_VMode, next video mode available   */ \
   OP(XKB_KEY_XF86Prev_VMode, LCTRL(LALT(Key_KeypadSubtract))) /* XKB_KEY_XF86Prev_VMode, prev. video mode available  */ \
   OP(XKB_KEY_XF86Switch_VT_1, LCTRL(LALT(Key_F1))) /* XKB_KEY_XF86Switch_VT_1 */ \
   OP(XKB_KEY_XF86Switch_VT_10, LCTRL(LALT(Key_F10))) /* XKB_KEY_XF86Switch_VT_10 */ \
   OP(XKB_KEY_XF86Switch_VT_11, LCTRL(LALT(Key_F11))) /* XKB_KEY_XF86Switch_VT_11 */ \
   OP(XKB_KEY_XF86Switch_VT_12, LCTRL(LALT(Key_F12))) /* XKB_KEY_XF86Switch_VT_12 */ \
   OP(XKB_KEY_XF86Switch_VT_2, LCTRL(LALT(Key_F2))) /* XKB_KEY_XF86Switch_VT_2 */ \
   OP(XKB_KEY_XF86Switch_VT_3, LCTRL(LALT(Key_F3))) /* XKB_KEY_XF86Switch_VT_3 */ \
   OP(XKB_KEY_XF86Switch_VT_4, LCTRL(LALT(Key_F4))) /* XKB_KEY_XF86Switch_VT_4 */ \
   OP(XKB_KEY_XF86Switch_VT_5, LCTRL(LALT(Key_F5))) /* XKB_KEY_XF86Switch_VT_5 */ \
   OP(XKB_KEY_XF86Switch_VT_6, LCTRL(LALT(Key_F6))) /* XKB_KEY_XF86Switch_VT_6 */ \
   OP(XKB_KEY_XF86Switch_VT_7, LCTRL(LALT(Key_F7))) /* XKB_KEY_XF86Switch_VT_7 */ \
   OP(XKB_KEY_XF86Switch_VT_8, LCTRL(LALT(Key_F8))) /* XKB_KEY_XF86Switch_VT_8 */ \
   OP(XKB_KEY_XF86Switch_VT_9, LCTRL(LALT(Key_F9))) /* XKB_KEY_XF86Switch_VT_9 */ \
   OP(XKB_KEY_XF86Ungrab, LCTRL(LALT(Key_KeypadDivide))) /* XKB_KEY_XF86Ungrab, force ungrab                */ \
   OP(XKB_KEY_ampersand, LSHIFT(Key_7)) \
   OP(XKB_KEY_apostrophe, Key_Quote) /* XKB_KEY_quoteright, deprecated  */ \
   OP(XKB_KEY_asciicircum, LSHIFT(Key_6)) \
   OP(XKB_KEY_asciitilde, RALT(LSHIFT(Key_Backtick))) \
   OP(XKB_KEY_at, LSHIFT(Key_2)) \
   OP(XKB_KEY_bar, RALT(Key_NonUsBackslashAndPipe)) \
   OP(XKB_KEY_braceleft, RALT(LSHIFT(Key_LeftBracket))) \
   OP(XKB_KEY_braceright, RALT(LSHIFT(Key_RightBracket))) \
   OP(XKB_KEY_bracketleft, RALT(Key_LeftBracket)) \
   OP(XKB_KEY_bracketright, RALT(Key_RightBracket)) \
   OP(XKB_KEY_brokenbar, RALT(LSHIFT(Key_NonUsBackslashAndPipe))) \
   OP(XKB_KEY_colon, RALT(LSHIFT(Key_Semicolon))) \
   OP(XKB_KEY_comma, Key_Comma) \
   OP(XKB_KEY_dollar, LSHIFT(Key_4)) \
   OP(XKB_KEY_exclam, LSHIFT(Key_1)) \
   OP(XKB_KEY_grave, RALT(Key_Backtick)) /* XKB_KEY_quoteleft, deprecated  */ \
   OP(XKB_KEY_greater, LSHIFT(Key_NonUsBackslashAndPipe)) \
   OP(XKB_KEY_leftcaret, RALT(Key_Comma)) \
   OP(XKB_KEY_less, Key_NonUsBackslashAndPipe) \
   OP(XKB_KEY_numbersign, LSHIFT(Key_3)) \
   OP(XKB_KEY_parenleft, LSHIFT(Key_9)) \
   OP(XKB_KEY_parenright, LSHIFT(Key_0)) \
   OP(XKB_KEY_percent, LSHIFT(Key_5)) \
   OP(XKB_KEY_period, Key_Period) \
   OP(XKB_KEY_question, LSHIFT(Key_Slash)) \
   OP(XKB_KEY_quotedbl, LSHIFT(Key_Quote)) \
   OP(XKB_KEY_rightcaret, RALT(Key_Period)) \
   OP(XKB_KEY_semicolon, RALT(Key_Semicolon)) \
   OP(XKB_KEY_space, Key_Spacebar) \
   OP(XKB_KEY_underbar, LSHIFT(Key_Minus)) \


namespace kaleidoscope {
namespace host_keymap {
namespace linux {
namespace in {
namespace tel_sarala {

HOST_KEYMAP_LINUX(
  _HOST_KEYMAP_ASCII,
  _HOST_KEYMAP_UNICODE,
  _HOST_KEYMAP_NON_PRINTABLE
)

} // namespace tel_sarala
} // namespace in
} // namespace linux
} // namespace host_keymap
} // namespace kaleidoscope

#undef _HOST_KEYMAP_ASCII
#undef _HOST_KEYMAP_UNICODE
#undef _HOST_KEYMAP_NON_PRINTABLE

