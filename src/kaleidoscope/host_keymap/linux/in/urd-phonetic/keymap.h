/* Kaleidoscope - Firmware for computer input devices
 * Copyright (C) 2013-2019  Keyboard.io, Inc.
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "kaleidoscope/host_keymap/linux.h"

// This file was autogenerated by host_keymap.
// Its content is based on information provided by the XKB X11 system
// collected with the extraordinary libxkbcommon.

// layout: in
// variant: urd-phonetic

#define _HOST_KEYMAP_ASCII(OP) \
   OP('\b', Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP('\t', Key_Tab) /* XKB_KEY_Tab */ \
   OP('\r', Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP('\e', Key_Escape) /* XKB_KEY_Escape */ \
   OP(' ', Key_Spacebar) /* U+0020, XKB_KEY_space, SPACE */ \
   OP('!', LSHIFT(Key_1)) \
   OP('"', LSHIFT(Key_Quote)) \
   OP('#', LSHIFT(Key_3)) \
   OP('$', LSHIFT(Key_4)) \
   OP('%', LSHIFT(Key_5)) \
   OP('&', LSHIFT(Key_7)) \
   OP(''', Key_Quote) \
   OP('(', LSHIFT(Key_0)) \
   OP(')', LSHIFT(Key_9)) \
   OP('*', Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP('+', Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP('-', Key_Minus) \
   OP('.', LSHIFT(Key_B)) \
   OP('/', Key_Slash) \
   OP('0', Key_0) \
   OP('1', Key_1) \
   OP('2', Key_2) \
   OP('3', Key_3) \
   OP('4', Key_4) \
   OP('5', Key_5) \
   OP('6', Key_6) \
   OP('7', Key_7) \
   OP('8', Key_8) \
   OP('9', Key_9) \
   OP(':', LSHIFT(Key_Semicolon)) \
   OP('<', LSHIFT(Key_Comma)) \
   OP('=', Key_Equals) \
   OP('>', LSHIFT(Key_Period)) \
   OP('@', LSHIFT(Key_2)) \
   OP('[', Key_RightBracket) \
   OP('\', Key_NonUsPound) \
   OP(']', Key_LeftBracket) \
   OP('^', LSHIFT(Key_6)) \
   OP('_', LSHIFT(Key_Minus)) \
   OP('{', LSHIFT(Key_RightBracket)) \
   OP('|', Key_NonUsBackslashAndPipe) /* U+007c, XKB_KEY_bar, VERTICAL LINE */ \
   OP('}', LSHIFT(Key_LeftBracket)) \
   OP('~', LSHIFT(Key_Backtick)) \
   OP('', Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \

#define _HOST_KEYMAP_UNICODE(OP) \
   OP(L'\b', Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP(L'\t', Key_Tab) /* XKB_KEY_Tab */ \
   OP(L'\r', Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP(L'\e', Key_Escape) /* XKB_KEY_Escape */ \
   OP(L' ', Key_Spacebar) /* U+0020, XKB_KEY_space, SPACE */ \
   OP(L'!', LSHIFT(Key_1)) \
   OP(L'"', LSHIFT(Key_Quote)) \
   OP(L'#', LSHIFT(Key_3)) \
   OP(L'$', LSHIFT(Key_4)) \
   OP(L'%', LSHIFT(Key_5)) \
   OP(L'&', LSHIFT(Key_7)) \
   OP(L''', Key_Quote) \
   OP(L'(', LSHIFT(Key_0)) \
   OP(L')', LSHIFT(Key_9)) \
   OP(L'*', Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP(L'+', Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(L'-', Key_Minus) \
   OP(L'.', LSHIFT(Key_B)) \
   OP(L'/', Key_Slash) \
   OP(L'0', Key_0) \
   OP(L'1', Key_1) \
   OP(L'2', Key_2) \
   OP(L'3', Key_3) \
   OP(L'4', Key_4) \
   OP(L'5', Key_5) \
   OP(L'6', Key_6) \
   OP(L'7', Key_7) \
   OP(L'8', Key_8) \
   OP(L'9', Key_9) \
   OP(L':', LSHIFT(Key_Semicolon)) \
   OP(L'<', LSHIFT(Key_Comma)) \
   OP(L'=', Key_Equals) \
   OP(L'>', LSHIFT(Key_Period)) \
   OP(L'@', LSHIFT(Key_2)) \
   OP(L'[', Key_RightBracket) \
   OP(L'\', Key_NonUsPound) \
   OP(L']', Key_LeftBracket) \
   OP(L'^', LSHIFT(Key_6)) \
   OP(L'_', LSHIFT(Key_Minus)) \
   OP(L'{', LSHIFT(Key_RightBracket)) \
   OP(L'|', Key_NonUsBackslashAndPipe) /* U+007c, XKB_KEY_bar, VERTICAL LINE */ \
   OP(L'}', LSHIFT(Key_LeftBracket)) \
   OP(L'~', LSHIFT(Key_Backtick)) \
   OP(L'', Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \
   OP(L'¦', LSHIFT(Key_NonUsBackslashAndPipe)) /* U+00a6, XKB_KEY_brokenbar, BROKEN BAR */ \
   OP(L'،', Key_Comma) \
   OP(L'؛', Key_Semicolon) \
   OP(L'؟', LSHIFT(Key_Slash)) \
   OP(L'ء', Key_U) \
   OP(L'آ', LSHIFT(Key_A)) \
   OP(L'ؤ', LSHIFT(Key_W)) \
   OP(L'ئ', LSHIFT(Key_U)) \
   OP(L'ا', Key_A) \
   OP(L'ب', Key_B) \
   OP(L'ت', Key_T) \
   OP(L'ث', LSHIFT(Key_C)) \
   OP(L'ج', Key_J) \
   OP(L'ح', Key_H) \
   OP(L'خ', LSHIFT(Key_K)) \
   OP(L'د', Key_D) \
   OP(L'ذ', LSHIFT(Key_Z)) \
   OP(L'ر', Key_R) \
   OP(L'ز', Key_Z) \
   OP(L'س', Key_S) \
   OP(L'ش', Key_X) \
   OP(L'ص', LSHIFT(Key_S)) \
   OP(L'ض', LSHIFT(Key_J)) \
   OP(L'ط', Key_V) \
   OP(L'ظ', LSHIFT(Key_V)) \
   OP(L'ع', Key_E) \
   OP(L'غ', LSHIFT(Key_G)) \
   OP(L'ف', Key_F) \
   OP(L'ق', Key_Q) \
   OP(L'ل', Key_L) \
   OP(L'م', Key_M) \
   OP(L'ن', Key_N) \
   OP(L'و', Key_W) \
   OP(L'ً', Key_Backtick) \
   OP(L'َ', LSHIFT(Key_Y)) \
   OP(L'ُ', LSHIFT(Key_P)) \
   OP(L'ِ', LSHIFT(Key_I)) \
   OP(L'ّ', LSHIFT(Key_F)) \
   OP(L'ْ', LSHIFT(Key_Q)) \
   OP(L'ٔ', LSHIFT(Key_L)) /* U+0654, XKB_KEY_Arabic_hamza_above, ARABIC HAMZA ABOVE */ \
   OP(L'٘', LSHIFT(Key_M)) \
   OP(L'ٰ', LSHIFT(Key_E)) /* U+0670, XKB_KEY_Arabic_superscript_alef, ARABIC LETTER SUPERSCRIPT ALEF */ \
   OP(L'ٹ', LSHIFT(Key_T)) /* U+0679, XKB_KEY_Arabic_tteh, ARABIC LETTER TTEH */ \
   OP(L'پ', Key_P) /* U+067e, XKB_KEY_Arabic_peh, ARABIC LETTER PEH */ \
   OP(L'چ', Key_C) /* U+0686, XKB_KEY_Arabic_tcheh, ARABIC LETTER TCHEH */ \
   OP(L'ڈ', LSHIFT(Key_D)) /* U+0688, XKB_KEY_Arabic_ddal, ARABIC LETTER DDAL */ \
   OP(L'ڑ', LSHIFT(Key_R)) /* U+0691, XKB_KEY_Arabic_rreh, ARABIC LETTER RREH */ \
   OP(L'ژ', LSHIFT(Key_X)) /* U+0698, XKB_KEY_Arabic_jeh, ARABIC LETTER JEH */ \
   OP(L'ک', Key_K) /* U+06a9, XKB_KEY_Arabic_keheh, ARABIC LETTER KEHEH */ \
   OP(L'گ', Key_G) /* U+06af, XKB_KEY_Arabic_gaf, ARABIC LETTER GAF */ \
   OP(L'ں', LSHIFT(Key_N)) /* U+06ba, XKB_KEY_Arabic_noon_ghunna, ARABIC LETTER NOON GHUNNA */ \
   OP(L'ھ', LSHIFT(Key_H)) /* U+06be, XKB_KEY_Arabic_heh_doachashmee, ARABIC LETTER HEH DOACHASHMEE */ \
   OP(L'ہ', Key_O) /* U+06c1, XKB_KEY_Arabic_heh_goal, ARABIC LETTER HEH GOAL */ \
   OP(L'ۃ', LSHIFT(Key_O)) \
   OP(L'ی', Key_I) /* U+06cc, XKB_KEY_Farsi_yeh, ARABIC LETTER FARSI YEH */ \
   OP(L'ے', Key_Y) /* U+06d2, XKB_KEY_Arabic_yeh_baree, ARABIC LETTER YEH BARREE */ \
   OP(L'۔', Key_Period) /* U+06d4, XKB_KEY_Arabic_fullstop, ARABIC FULL STOP */ \
   OP(L'‌', RALT(Key_W)) \
   OP(L'‍', RALT(Key_Q)) \
   OP(L'‎', RALT(Key_Z)) \
   OP(L'‏', RALT(Key_M)) \
   OP(L'‪', RALT(Key_X)) \
   OP(L'‫', RALT(Key_N)) \
   OP(L'‬', RALT(Key_V)) \
   OP(L'‭', RALT(Key_C)) \
   OP(L'‮', RALT(Key_B)) \

#define _HOST_KEYMAP_NON_PRINTABLE(OP) \
   OP(XKB_KEY_Alt_L, Key_LeftAlt) /* XKB_KEY_Alt_L, Left alt  */ \
   OP(XKB_KEY_Arabic_ddal, LSHIFT(Key_D)) \
   OP(XKB_KEY_Arabic_fullstop, Key_Period) \
   OP(XKB_KEY_Arabic_gaf, Key_G) \
   OP(XKB_KEY_Arabic_hamza_above, LSHIFT(Key_L)) \
   OP(XKB_KEY_Arabic_heh_doachashmee, LSHIFT(Key_H)) \
   OP(XKB_KEY_Arabic_heh_goal, Key_O) \
   OP(XKB_KEY_Arabic_jeh, LSHIFT(Key_X)) \
   OP(XKB_KEY_Arabic_keheh, Key_K) \
   OP(XKB_KEY_Arabic_noon_ghunna, LSHIFT(Key_N)) \
   OP(XKB_KEY_Arabic_peh, Key_P) \
   OP(XKB_KEY_Arabic_rreh, LSHIFT(Key_R)) \
   OP(XKB_KEY_Arabic_superscript_alef, LSHIFT(Key_E)) \
   OP(XKB_KEY_Arabic_tcheh, Key_C) \
   OP(XKB_KEY_Arabic_tteh, LSHIFT(Key_T)) \
   OP(XKB_KEY_Arabic_yeh_baree, Key_Y) \
   OP(XKB_KEY_BackSpace, Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP(XKB_KEY_Break, LCTRL(Key_Pause)) /* XKB_KEY_Break */ \
   OP(XKB_KEY_Caps_Lock, Key_CapsLock) /* XKB_KEY_Caps_Lock, Caps lock  */ \
   OP(XKB_KEY_Control_L, Key_LeftControl) /* XKB_KEY_Control_L, Left control  */ \
   OP(XKB_KEY_Control_R, Key_RightControl) /* XKB_KEY_Control_R, Right control  */ \
   OP(XKB_KEY_Delete, Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \
   OP(XKB_KEY_Down, Key_DownArrow) /* XKB_KEY_Down, Move down, down arrow  */ \
   OP(XKB_KEY_End, Key_End) /* XKB_KEY_End, EOL  */ \
   OP(XKB_KEY_Escape, Key_Escape) /* XKB_KEY_Escape */ \
   OP(XKB_KEY_F1, Key_F1) /* XKB_KEY_F1 */ \
   OP(XKB_KEY_F10, Key_F10) /* XKB_KEY_F10 */ \
   OP(XKB_KEY_F11, Key_F11) /* XKB_KEY_F11 */ \
   OP(XKB_KEY_F12, Key_F12) /* XKB_KEY_F12 */ \
   OP(XKB_KEY_F2, Key_F2) /* XKB_KEY_F2 */ \
   OP(XKB_KEY_F3, Key_F3) /* XKB_KEY_F3 */ \
   OP(XKB_KEY_F4, Key_F4) /* XKB_KEY_F4 */ \
   OP(XKB_KEY_F5, Key_F5) /* XKB_KEY_F5 */ \
   OP(XKB_KEY_F6, Key_F6) /* XKB_KEY_F6 */ \
   OP(XKB_KEY_F7, Key_F7) /* XKB_KEY_F7 */ \
   OP(XKB_KEY_F8, Key_F8) /* XKB_KEY_F8 */ \
   OP(XKB_KEY_F9, Key_F9) /* XKB_KEY_F9 */ \
   OP(XKB_KEY_Farsi_yeh, Key_I) \
   OP(XKB_KEY_Home, Key_Home) /* XKB_KEY_Home */ \
   OP(XKB_KEY_ISO_Left_Tab, LSHIFT(Key_Tab)) /* XKB_KEY_ISO_Left_Tab */ \
   OP(XKB_KEY_ISO_Level3_Shift, Key_RightAlt) /* XKB_KEY_ISO_Level3_Shift */ \
   OP(XKB_KEY_Insert, Key_Insert) /* XKB_KEY_Insert, Insert, insert here  */ \
   OP(XKB_KEY_KP_0, LSHIFT(Key_Keypad0)) /* XKB_KEY_KP_0 */ \
   OP(XKB_KEY_KP_1, LSHIFT(Key_Keypad1)) /* XKB_KEY_KP_1 */ \
   OP(XKB_KEY_KP_2, LSHIFT(Key_Keypad2)) /* XKB_KEY_KP_2 */ \
   OP(XKB_KEY_KP_3, LSHIFT(Key_Keypad3)) /* XKB_KEY_KP_3 */ \
   OP(XKB_KEY_KP_4, LSHIFT(Key_Keypad4)) /* XKB_KEY_KP_4 */ \
   OP(XKB_KEY_KP_5, LSHIFT(Key_Keypad5)) /* XKB_KEY_KP_5 */ \
   OP(XKB_KEY_KP_6, LSHIFT(Key_Keypad6)) /* XKB_KEY_KP_6 */ \
   OP(XKB_KEY_KP_7, LSHIFT(Key_Keypad7)) /* XKB_KEY_KP_7 */ \
   OP(XKB_KEY_KP_8, LSHIFT(Key_Keypad8)) /* XKB_KEY_KP_8 */ \
   OP(XKB_KEY_KP_9, LSHIFT(Key_Keypad9)) /* XKB_KEY_KP_9 */ \
   OP(XKB_KEY_KP_Add, Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(XKB_KEY_KP_Begin, Key_Keypad5) /* XKB_KEY_KP_Begin */ \
   OP(XKB_KEY_KP_Decimal, LSHIFT(Key_KeypadDot)) /* XKB_KEY_KP_Decimal */ \
   OP(XKB_KEY_KP_Delete, Key_KeypadDot) /* XKB_KEY_KP_Delete */ \
   OP(XKB_KEY_KP_Divide, Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP(XKB_KEY_KP_Down, Key_Keypad2) /* XKB_KEY_KP_Down */ \
   OP(XKB_KEY_KP_End, Key_Keypad1) /* XKB_KEY_KP_End */ \
   OP(XKB_KEY_KP_Enter, Key_KeypadEnter) /* XKB_KEY_KP_Enter, Enter  */ \
   OP(XKB_KEY_KP_Home, Key_Keypad7) /* XKB_KEY_KP_Home */ \
   OP(XKB_KEY_KP_Insert, Key_Keypad0) /* XKB_KEY_KP_Insert */ \
   OP(XKB_KEY_KP_Left, Key_Keypad4) /* XKB_KEY_KP_Left */ \
   OP(XKB_KEY_KP_Multiply, Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP(XKB_KEY_KP_Next, Key_Keypad3) /* XKB_KEY_KP_Next */ \
   OP(XKB_KEY_KP_Prior, Key_Keypad9) /* XKB_KEY_KP_Prior */ \
   OP(XKB_KEY_KP_Right, Key_Keypad6) /* XKB_KEY_KP_Right */ \
   OP(XKB_KEY_KP_Subtract, Key_KeypadSubtract) /* XKB_KEY_KP_Subtract */ \
   OP(XKB_KEY_KP_Up, Key_Keypad8) /* XKB_KEY_KP_Up */ \
   OP(XKB_KEY_Left, Key_LeftArrow) /* XKB_KEY_Left, Move left, left arrow  */ \
   OP(XKB_KEY_Menu, Key_PcApplication) /* XKB_KEY_Menu */ \
   OP(XKB_KEY_Meta_L, LSHIFT(Key_LeftAlt)) /* XKB_KEY_Meta_L, Left meta  */ \
   OP(XKB_KEY_Next, Key_PageDown) /* XKB_KEY_Next, Next  */ \
   OP(XKB_KEY_Num_Lock, Key_KeypadNumLock) /* XKB_KEY_Num_Lock */ \
   OP(XKB_KEY_Pause, Key_Pause) /* XKB_KEY_Pause, Pause, hold  */ \
   OP(XKB_KEY_Print, Key_PrintScreen) /* XKB_KEY_Print */ \
   OP(XKB_KEY_Prior, Key_PageUp) /* XKB_KEY_Prior, Prior, previous  */ \
   OP(XKB_KEY_Return, Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP(XKB_KEY_Right, Key_RightArrow) /* XKB_KEY_Right, Move right, right arrow  */ \
   OP(XKB_KEY_Scroll_Lock, Key_ScrollLock) /* XKB_KEY_Scroll_Lock */ \
   OP(XKB_KEY_Shift_L, Key_LeftShift) /* XKB_KEY_Shift_L, Left shift  */ \
   OP(XKB_KEY_Shift_R, Key_RightShift) /* XKB_KEY_Shift_R, Right shift  */ \
   OP(XKB_KEY_Super_L, Key_LeftGui) /* XKB_KEY_Super_L, Left super  */ \
   OP(XKB_KEY_Super_R, Key_RightGui) /* XKB_KEY_Super_R, Right super  */ \
   OP(XKB_KEY_Sys_Req, LALT(Key_PrintScreen)) /* XKB_KEY_Sys_Req */ \
   OP(XKB_KEY_Tab, Key_Tab) /* XKB_KEY_Tab */ \
   OP(XKB_KEY_Up, Key_UpArrow) /* XKB_KEY_Up, Move up, up arrow  */ \
   OP(XKB_KEY_XF86ClearGrab, LCTRL(LALT(Key_KeypadMultiply))) /* XKB_KEY_XF86ClearGrab, kill application with grab  */ \
   OP(XKB_KEY_XF86Next_VMode, LCTRL(LALT(Key_KeypadAdd))) /* XKB_KEY_XF86Next_VMode, next video mode available   */ \
   OP(XKB_KEY_XF86Prev_VMode, LCTRL(LALT(Key_KeypadSubtract))) /* XKB_KEY_XF86Prev_VMode, prev. video mode available  */ \
   OP(XKB_KEY_XF86Switch_VT_1, LCTRL(LALT(Key_F1))) /* XKB_KEY_XF86Switch_VT_1 */ \
   OP(XKB_KEY_XF86Switch_VT_10, LCTRL(LALT(Key_F10))) /* XKB_KEY_XF86Switch_VT_10 */ \
   OP(XKB_KEY_XF86Switch_VT_11, LCTRL(LALT(Key_F11))) /* XKB_KEY_XF86Switch_VT_11 */ \
   OP(XKB_KEY_XF86Switch_VT_12, LCTRL(LALT(Key_F12))) /* XKB_KEY_XF86Switch_VT_12 */ \
   OP(XKB_KEY_XF86Switch_VT_2, LCTRL(LALT(Key_F2))) /* XKB_KEY_XF86Switch_VT_2 */ \
   OP(XKB_KEY_XF86Switch_VT_3, LCTRL(LALT(Key_F3))) /* XKB_KEY_XF86Switch_VT_3 */ \
   OP(XKB_KEY_XF86Switch_VT_4, LCTRL(LALT(Key_F4))) /* XKB_KEY_XF86Switch_VT_4 */ \
   OP(XKB_KEY_XF86Switch_VT_5, LCTRL(LALT(Key_F5))) /* XKB_KEY_XF86Switch_VT_5 */ \
   OP(XKB_KEY_XF86Switch_VT_6, LCTRL(LALT(Key_F6))) /* XKB_KEY_XF86Switch_VT_6 */ \
   OP(XKB_KEY_XF86Switch_VT_7, LCTRL(LALT(Key_F7))) /* XKB_KEY_XF86Switch_VT_7 */ \
   OP(XKB_KEY_XF86Switch_VT_8, LCTRL(LALT(Key_F8))) /* XKB_KEY_XF86Switch_VT_8 */ \
   OP(XKB_KEY_XF86Switch_VT_9, LCTRL(LALT(Key_F9))) /* XKB_KEY_XF86Switch_VT_9 */ \
   OP(XKB_KEY_XF86Ungrab, LCTRL(LALT(Key_KeypadDivide))) /* XKB_KEY_XF86Ungrab, force ungrab                */ \
   OP(XKB_KEY_bar, Key_NonUsBackslashAndPipe) \
   OP(XKB_KEY_brokenbar, LSHIFT(Key_NonUsBackslashAndPipe)) \
   OP(XKB_KEY_space, Key_Spacebar) \


namespace kaleidoscope {
namespace host_keymap {
namespace linux {
namespace in {
namespace urd_phonetic {

HOST_KEYMAP_LINUX(
  _HOST_KEYMAP_ASCII,
  _HOST_KEYMAP_UNICODE,
  _HOST_KEYMAP_NON_PRINTABLE
)

} // namespace urd_phonetic
} // namespace in
} // namespace linux
} // namespace host_keymap
} // namespace kaleidoscope

#undef _HOST_KEYMAP_ASCII
#undef _HOST_KEYMAP_UNICODE
#undef _HOST_KEYMAP_NON_PRINTABLE

