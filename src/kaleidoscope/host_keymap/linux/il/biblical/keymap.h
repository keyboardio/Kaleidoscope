/* Kaleidoscope - Firmware for computer input devices
 * Copyright (C) 2013-2019  Keyboard.io, Inc.
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "kaleidoscope/host_keymap/linux.h"

// This file was autogenerated by host_keymap.
// Its content is based on information provided by the XKB X11 system
// collected with the extraordinary libxkbcommon.

// layout: il
// variant: biblical

#define _HOST_KEYMAP_ASCII(OP) \
   OP('\b', Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP('\t', Key_Tab) /* XKB_KEY_Tab */ \
   OP('\r', Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP('\e', Key_Escape) /* XKB_KEY_Escape */ \
   OP(' ', Key_Spacebar) /* U+0020, XKB_KEY_space, SPACE */ \
   OP('*', Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP('+', Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP('-', Key_KeypadSubtract) /* XKB_KEY_KP_Subtract */ \
   OP('.', LSHIFT(Key_KeypadDot)) /* XKB_KEY_KP_Decimal */ \
   OP('/', Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP('0', Key_0) /* U+0030, XKB_KEY_0, DIGIT ZERO */ \
   OP('1', Key_1) /* U+0031, XKB_KEY_1, DIGIT ONE */ \
   OP('2', Key_2) /* U+0032, XKB_KEY_2, DIGIT TWO */ \
   OP('3', Key_3) /* U+0033, XKB_KEY_3, DIGIT THREE */ \
   OP('4', Key_4) /* U+0034, XKB_KEY_4, DIGIT FOUR */ \
   OP('5', Key_5) /* U+0035, XKB_KEY_5, DIGIT FIVE */ \
   OP('6', Key_6) /* U+0036, XKB_KEY_6, DIGIT SIX */ \
   OP('7', Key_7) /* U+0037, XKB_KEY_7, DIGIT SEVEN */ \
   OP('8', Key_8) /* U+0038, XKB_KEY_8, DIGIT EIGHT */ \
   OP('9', Key_9) /* U+0039, XKB_KEY_9, DIGIT NINE */ \
   OP('<', Key_NonUsBackslashAndPipe) /* U+003c, XKB_KEY_less, LESS-THAN SIGN */ \
   OP('=', Key_Equals) /* U+003d, XKB_KEY_equal, EQUALS SIGN */ \
   OP('>', LSHIFT(Key_NonUsBackslashAndPipe)) /* U+003e, XKB_KEY_greater, GREATER-THAN SIGN */ \
   OP('[', Key_RightBracket) /* U+005b, XKB_KEY_bracketleft, LEFT SQUARE BRACKET */ \
   OP(']', Key_LeftBracket) /* U+005d, XKB_KEY_bracketright, RIGHT SQUARE BRACKET */ \
   OP('', Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \

#define _HOST_KEYMAP_UNICODE(OP) \
   OP(L'\b', Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP(L'\t', Key_Tab) /* XKB_KEY_Tab */ \
   OP(L'\r', Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP(L'\e', Key_Escape) /* XKB_KEY_Escape */ \
   OP(L' ', Key_Spacebar) /* U+0020, XKB_KEY_space, SPACE */ \
   OP(L'*', Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP(L'+', Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(L'-', Key_KeypadSubtract) /* XKB_KEY_KP_Subtract */ \
   OP(L'.', LSHIFT(Key_KeypadDot)) /* XKB_KEY_KP_Decimal */ \
   OP(L'/', Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP(L'0', Key_0) /* U+0030, XKB_KEY_0, DIGIT ZERO */ \
   OP(L'1', Key_1) /* U+0031, XKB_KEY_1, DIGIT ONE */ \
   OP(L'2', Key_2) /* U+0032, XKB_KEY_2, DIGIT TWO */ \
   OP(L'3', Key_3) /* U+0033, XKB_KEY_3, DIGIT THREE */ \
   OP(L'4', Key_4) /* U+0034, XKB_KEY_4, DIGIT FOUR */ \
   OP(L'5', Key_5) /* U+0035, XKB_KEY_5, DIGIT FIVE */ \
   OP(L'6', Key_6) /* U+0036, XKB_KEY_6, DIGIT SIX */ \
   OP(L'7', Key_7) /* U+0037, XKB_KEY_7, DIGIT SEVEN */ \
   OP(L'8', Key_8) /* U+0038, XKB_KEY_8, DIGIT EIGHT */ \
   OP(L'9', Key_9) /* U+0039, XKB_KEY_9, DIGIT NINE */ \
   OP(L'<', Key_NonUsBackslashAndPipe) /* U+003c, XKB_KEY_less, LESS-THAN SIGN */ \
   OP(L'=', Key_Equals) /* U+003d, XKB_KEY_equal, EQUALS SIGN */ \
   OP(L'>', LSHIFT(Key_NonUsBackslashAndPipe)) /* U+003e, XKB_KEY_greater, GREATER-THAN SIGN */ \
   OP(L'[', Key_RightBracket) /* U+005b, XKB_KEY_bracketleft, LEFT SQUARE BRACKET */ \
   OP(L']', Key_LeftBracket) /* U+005d, XKB_KEY_bracketright, RIGHT SQUARE BRACKET */ \
   OP(L'', Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \
   OP(L'̇', Key_Q) \
   OP(L'֑', LSHIFT(Key_Comma)) \
   OP(L'֒', LSHIFT(Key_3)) \
   OP(L'֓', LSHIFT(Key_T)) \
   OP(L'֔', LSHIFT(Key_P)) \
   OP(L'֕', LSHIFT(Key_O)) \
   OP(L'֖', LSHIFT(Key_Period)) \
   OP(L'֗', LSHIFT(Key_LeftBracket)) \
   OP(L'֘', LSHIFT(Key_RightBracket)) \
   OP(L'֙', LSHIFT(Key_2)) \
   OP(L'֚', Key_Quote) \
   OP(L'֛', LSHIFT(Key_M)) \
   OP(L'֜', LSHIFT(Key_U)) \
   OP(L'֝', LSHIFT(Key_0)) \
   OP(L'֞', LSHIFT(Key_Y)) \
   OP(L'֟', LSHIFT(Key_R)) \
   OP(L'֠', LSHIFT(Key_Minus)) \
   OP(L'֡', LSHIFT(Key_I)) \
   OP(L'֣', LSHIFT(Key_Slash)) \
   OP(L'֤', LSHIFT(Key_X)) \
   OP(L'֥', LSHIFT(Key_B)) \
   OP(L'֦', LSHIFT(Key_V)) \
   OP(L'֧', LSHIFT(Key_N)) \
   OP(L'֨', LSHIFT(Key_NonUsPound)) \
   OP(L'֩', LSHIFT(Key_1)) \
   OP(L'֪', LSHIFT(Key_C)) \
   OP(L'֫', LSHIFT(Key_E)) \
   OP(L'֬', LSHIFT(Key_W)) \
   OP(L'֭', Key_Slash) \
   OP(L'֮', LSHIFT(Key_Backtick)) \
   OP(L'֯', LSHIFT(Key_4)) \
   OP(L'ְ', LSHIFT(Key_S)) \
   OP(L'ֱ', LSHIFT(Key_G)) \
   OP(L'ֲ', LSHIFT(Key_Semicolon)) \
   OP(L'ֳ', LSHIFT(Key_K)) \
   OP(L'ִ', LSHIFT(Key_F)) \
   OP(L'ֵ', LSHIFT(Key_J)) \
   OP(L'ֶ', LSHIFT(Key_H)) \
   OP(L'ַ', LSHIFT(Key_Quote)) \
   OP(L'ָ', LSHIFT(Key_L)) \
   OP(L'ֹ', LSHIFT(Key_6)) \
   OP(L'ֺ', LSHIFT(Key_5)) \
   OP(L'ֻ', LSHIFT(Key_D)) \
   OP(L'ּ', LSHIFT(Key_Equals)) \
   OP(L'ֽ', LSHIFT(Key_A)) \
   OP(L'־', Key_Minus) \
   OP(L'ֿ', LSHIFT(Key_7)) \
   OP(L'׀', Key_NonUsPound) \
   OP(L'ׁ', LSHIFT(Key_9)) \
   OP(L'ׂ', LSHIFT(Key_8)) \
   OP(L'׃', Key_Backtick) \
   OP(L'ׄ', LSHIFT(Key_Q)) \
   OP(L'ׅ', LSHIFT(Key_Z)) \
   OP(L'א', Key_T) /* U+05d0, XKB_KEY_hebrew_aleph, HEBREW LETTER ALEF */ \
   OP(L'ב', Key_C) /* U+05d1, XKB_KEY_hebrew_bet, HEBREW LETTER BET */ \
   OP(L'ג', Key_D) /* U+05d2, XKB_KEY_hebrew_gimel, HEBREW LETTER GIMEL */ \
   OP(L'ד', Key_S) /* U+05d3, XKB_KEY_hebrew_dalet, HEBREW LETTER DALET */ \
   OP(L'ה', Key_V) /* U+05d4, XKB_KEY_hebrew_he, HEBREW LETTER HE */ \
   OP(L'ו', Key_U) /* U+05d5, XKB_KEY_hebrew_waw, HEBREW LETTER VAV */ \
   OP(L'ז', Key_Z) /* U+05d6, XKB_KEY_hebrew_zain, HEBREW LETTER ZAYIN */ \
   OP(L'ח', Key_J) /* U+05d7, XKB_KEY_hebrew_chet, HEBREW LETTER HET */ \
   OP(L'ט', Key_Y) /* U+05d8, XKB_KEY_hebrew_tet, HEBREW LETTER TET */ \
   OP(L'י', Key_H) /* U+05d9, XKB_KEY_hebrew_yod, HEBREW LETTER YOD */ \
   OP(L'ך', Key_L) /* U+05da, XKB_KEY_hebrew_finalkaph, HEBREW LETTER FINAL KAF */ \
   OP(L'כ', Key_F) /* U+05db, XKB_KEY_hebrew_kaph, HEBREW LETTER KAF */ \
   OP(L'ל', Key_K) /* U+05dc, XKB_KEY_hebrew_lamed, HEBREW LETTER LAMED */ \
   OP(L'ם', Key_O) /* U+05dd, XKB_KEY_hebrew_finalmem, HEBREW LETTER FINAL MEM */ \
   OP(L'מ', Key_N) /* U+05de, XKB_KEY_hebrew_mem, HEBREW LETTER MEM */ \
   OP(L'ן', Key_I) /* U+05df, XKB_KEY_hebrew_finalnun, HEBREW LETTER FINAL NUN */ \
   OP(L'נ', Key_B) /* U+05e0, XKB_KEY_hebrew_nun, HEBREW LETTER NUN */ \
   OP(L'ס', Key_X) /* U+05e1, XKB_KEY_hebrew_samech, HEBREW LETTER SAMEKH */ \
   OP(L'ע', Key_G) /* U+05e2, XKB_KEY_hebrew_ayin, HEBREW LETTER AYIN */ \
   OP(L'ף', Key_Semicolon) /* U+05e3, XKB_KEY_hebrew_finalpe, HEBREW LETTER FINAL PE */ \
   OP(L'פ', Key_P) /* U+05e4, XKB_KEY_hebrew_pe, HEBREW LETTER PE */ \
   OP(L'ץ', Key_Period) /* U+05e5, XKB_KEY_hebrew_finalzade, HEBREW LETTER FINAL TSADI */ \
   OP(L'צ', Key_M) /* U+05e6, XKB_KEY_hebrew_zade, HEBREW LETTER TSADI */ \
   OP(L'ק', Key_E) /* U+05e7, XKB_KEY_hebrew_qoph, HEBREW LETTER QOF */ \
   OP(L'ר', Key_R) /* U+05e8, XKB_KEY_hebrew_resh, HEBREW LETTER RESH */ \
   OP(L'ש', Key_A) /* U+05e9, XKB_KEY_hebrew_shin, HEBREW LETTER SHIN */ \
   OP(L'ת', Key_Comma) /* U+05ea, XKB_KEY_hebrew_taw, HEBREW LETTER TAV */ \
   OP(L'׳', Key_W) \

#define _HOST_KEYMAP_NON_PRINTABLE(OP) \
   OP(XKB_KEY_0, Key_0) \
   OP(XKB_KEY_1, Key_1) \
   OP(XKB_KEY_2, Key_2) \
   OP(XKB_KEY_3, Key_3) \
   OP(XKB_KEY_4, Key_4) \
   OP(XKB_KEY_5, Key_5) \
   OP(XKB_KEY_6, Key_6) \
   OP(XKB_KEY_7, Key_7) \
   OP(XKB_KEY_8, Key_8) \
   OP(XKB_KEY_9, Key_9) \
   OP(XKB_KEY_Alt_L, Key_LeftAlt) /* XKB_KEY_Alt_L, Left alt  */ \
   OP(XKB_KEY_Alt_R, Key_RightAlt) /* XKB_KEY_Alt_R, Right alt  */ \
   OP(XKB_KEY_BackSpace, Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP(XKB_KEY_Break, LCTRL(Key_Pause)) /* XKB_KEY_Break */ \
   OP(XKB_KEY_Caps_Lock, Key_CapsLock) /* XKB_KEY_Caps_Lock, Caps lock  */ \
   OP(XKB_KEY_Control_L, Key_LeftControl) /* XKB_KEY_Control_L, Left control  */ \
   OP(XKB_KEY_Control_R, Key_RightControl) /* XKB_KEY_Control_R, Right control  */ \
   OP(XKB_KEY_Delete, Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \
   OP(XKB_KEY_Down, Key_DownArrow) /* XKB_KEY_Down, Move down, down arrow  */ \
   OP(XKB_KEY_End, Key_End) /* XKB_KEY_End, EOL  */ \
   OP(XKB_KEY_Escape, Key_Escape) /* XKB_KEY_Escape */ \
   OP(XKB_KEY_F1, Key_F1) /* XKB_KEY_F1 */ \
   OP(XKB_KEY_F10, Key_F10) /* XKB_KEY_F10 */ \
   OP(XKB_KEY_F11, Key_F11) /* XKB_KEY_F11 */ \
   OP(XKB_KEY_F12, Key_F12) /* XKB_KEY_F12 */ \
   OP(XKB_KEY_F2, Key_F2) /* XKB_KEY_F2 */ \
   OP(XKB_KEY_F3, Key_F3) /* XKB_KEY_F3 */ \
   OP(XKB_KEY_F4, Key_F4) /* XKB_KEY_F4 */ \
   OP(XKB_KEY_F5, Key_F5) /* XKB_KEY_F5 */ \
   OP(XKB_KEY_F6, Key_F6) /* XKB_KEY_F6 */ \
   OP(XKB_KEY_F7, Key_F7) /* XKB_KEY_F7 */ \
   OP(XKB_KEY_F8, Key_F8) /* XKB_KEY_F8 */ \
   OP(XKB_KEY_F9, Key_F9) /* XKB_KEY_F9 */ \
   OP(XKB_KEY_Home, Key_Home) /* XKB_KEY_Home */ \
   OP(XKB_KEY_ISO_Left_Tab, LSHIFT(Key_Tab)) /* XKB_KEY_ISO_Left_Tab */ \
   OP(XKB_KEY_Insert, Key_Insert) /* XKB_KEY_Insert, Insert, insert here  */ \
   OP(XKB_KEY_KP_0, LSHIFT(Key_Keypad0)) /* XKB_KEY_KP_0 */ \
   OP(XKB_KEY_KP_1, LSHIFT(Key_Keypad1)) /* XKB_KEY_KP_1 */ \
   OP(XKB_KEY_KP_2, LSHIFT(Key_Keypad2)) /* XKB_KEY_KP_2 */ \
   OP(XKB_KEY_KP_3, LSHIFT(Key_Keypad3)) /* XKB_KEY_KP_3 */ \
   OP(XKB_KEY_KP_4, LSHIFT(Key_Keypad4)) /* XKB_KEY_KP_4 */ \
   OP(XKB_KEY_KP_5, LSHIFT(Key_Keypad5)) /* XKB_KEY_KP_5 */ \
   OP(XKB_KEY_KP_6, LSHIFT(Key_Keypad6)) /* XKB_KEY_KP_6 */ \
   OP(XKB_KEY_KP_7, LSHIFT(Key_Keypad7)) /* XKB_KEY_KP_7 */ \
   OP(XKB_KEY_KP_8, LSHIFT(Key_Keypad8)) /* XKB_KEY_KP_8 */ \
   OP(XKB_KEY_KP_9, LSHIFT(Key_Keypad9)) /* XKB_KEY_KP_9 */ \
   OP(XKB_KEY_KP_Add, Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(XKB_KEY_KP_Begin, Key_Keypad5) /* XKB_KEY_KP_Begin */ \
   OP(XKB_KEY_KP_Decimal, LSHIFT(Key_KeypadDot)) /* XKB_KEY_KP_Decimal */ \
   OP(XKB_KEY_KP_Delete, Key_KeypadDot) /* XKB_KEY_KP_Delete */ \
   OP(XKB_KEY_KP_Divide, Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP(XKB_KEY_KP_Down, Key_Keypad2) /* XKB_KEY_KP_Down */ \
   OP(XKB_KEY_KP_End, Key_Keypad1) /* XKB_KEY_KP_End */ \
   OP(XKB_KEY_KP_Enter, Key_KeypadEnter) /* XKB_KEY_KP_Enter, Enter  */ \
   OP(XKB_KEY_KP_Home, Key_Keypad7) /* XKB_KEY_KP_Home */ \
   OP(XKB_KEY_KP_Insert, Key_Keypad0) /* XKB_KEY_KP_Insert */ \
   OP(XKB_KEY_KP_Left, Key_Keypad4) /* XKB_KEY_KP_Left */ \
   OP(XKB_KEY_KP_Multiply, Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP(XKB_KEY_KP_Next, Key_Keypad3) /* XKB_KEY_KP_Next */ \
   OP(XKB_KEY_KP_Prior, Key_Keypad9) /* XKB_KEY_KP_Prior */ \
   OP(XKB_KEY_KP_Right, Key_Keypad6) /* XKB_KEY_KP_Right */ \
   OP(XKB_KEY_KP_Subtract, Key_KeypadSubtract) /* XKB_KEY_KP_Subtract */ \
   OP(XKB_KEY_KP_Up, Key_Keypad8) /* XKB_KEY_KP_Up */ \
   OP(XKB_KEY_Left, Key_LeftArrow) /* XKB_KEY_Left, Move left, left arrow  */ \
   OP(XKB_KEY_Menu, Key_PcApplication) /* XKB_KEY_Menu */ \
   OP(XKB_KEY_Meta_L, LSHIFT(Key_LeftAlt)) /* XKB_KEY_Meta_L, Left meta  */ \
   OP(XKB_KEY_Meta_R, LSHIFT(Key_RightAlt)) /* XKB_KEY_Meta_R, Right meta  */ \
   OP(XKB_KEY_Next, Key_PageDown) /* XKB_KEY_Next, Next  */ \
   OP(XKB_KEY_Num_Lock, Key_KeypadNumLock) /* XKB_KEY_Num_Lock */ \
   OP(XKB_KEY_Pause, Key_Pause) /* XKB_KEY_Pause, Pause, hold  */ \
   OP(XKB_KEY_Print, Key_PrintScreen) /* XKB_KEY_Print */ \
   OP(XKB_KEY_Prior, Key_PageUp) /* XKB_KEY_Prior, Prior, previous  */ \
   OP(XKB_KEY_Return, Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP(XKB_KEY_Right, Key_RightArrow) /* XKB_KEY_Right, Move right, right arrow  */ \
   OP(XKB_KEY_Scroll_Lock, Key_ScrollLock) /* XKB_KEY_Scroll_Lock */ \
   OP(XKB_KEY_Shift_L, Key_LeftShift) /* XKB_KEY_Shift_L, Left shift  */ \
   OP(XKB_KEY_Shift_R, Key_RightShift) /* XKB_KEY_Shift_R, Right shift  */ \
   OP(XKB_KEY_Super_L, Key_LeftGui) /* XKB_KEY_Super_L, Left super  */ \
   OP(XKB_KEY_Super_R, Key_RightGui) /* XKB_KEY_Super_R, Right super  */ \
   OP(XKB_KEY_Sys_Req, LALT(Key_PrintScreen)) /* XKB_KEY_Sys_Req */ \
   OP(XKB_KEY_Tab, Key_Tab) /* XKB_KEY_Tab */ \
   OP(XKB_KEY_Up, Key_UpArrow) /* XKB_KEY_Up, Move up, up arrow  */ \
   OP(XKB_KEY_XF86ClearGrab, LCTRL(LALT(Key_KeypadMultiply))) /* XKB_KEY_XF86ClearGrab, kill application with grab  */ \
   OP(XKB_KEY_XF86Next_VMode, LCTRL(LALT(Key_KeypadAdd))) /* XKB_KEY_XF86Next_VMode, next video mode available   */ \
   OP(XKB_KEY_XF86Prev_VMode, LCTRL(LALT(Key_KeypadSubtract))) /* XKB_KEY_XF86Prev_VMode, prev. video mode available  */ \
   OP(XKB_KEY_XF86Switch_VT_1, LCTRL(LALT(Key_F1))) /* XKB_KEY_XF86Switch_VT_1 */ \
   OP(XKB_KEY_XF86Switch_VT_10, LCTRL(LALT(Key_F10))) /* XKB_KEY_XF86Switch_VT_10 */ \
   OP(XKB_KEY_XF86Switch_VT_11, LCTRL(LALT(Key_F11))) /* XKB_KEY_XF86Switch_VT_11 */ \
   OP(XKB_KEY_XF86Switch_VT_12, LCTRL(LALT(Key_F12))) /* XKB_KEY_XF86Switch_VT_12 */ \
   OP(XKB_KEY_XF86Switch_VT_2, LCTRL(LALT(Key_F2))) /* XKB_KEY_XF86Switch_VT_2 */ \
   OP(XKB_KEY_XF86Switch_VT_3, LCTRL(LALT(Key_F3))) /* XKB_KEY_XF86Switch_VT_3 */ \
   OP(XKB_KEY_XF86Switch_VT_4, LCTRL(LALT(Key_F4))) /* XKB_KEY_XF86Switch_VT_4 */ \
   OP(XKB_KEY_XF86Switch_VT_5, LCTRL(LALT(Key_F5))) /* XKB_KEY_XF86Switch_VT_5 */ \
   OP(XKB_KEY_XF86Switch_VT_6, LCTRL(LALT(Key_F6))) /* XKB_KEY_XF86Switch_VT_6 */ \
   OP(XKB_KEY_XF86Switch_VT_7, LCTRL(LALT(Key_F7))) /* XKB_KEY_XF86Switch_VT_7 */ \
   OP(XKB_KEY_XF86Switch_VT_8, LCTRL(LALT(Key_F8))) /* XKB_KEY_XF86Switch_VT_8 */ \
   OP(XKB_KEY_XF86Switch_VT_9, LCTRL(LALT(Key_F9))) /* XKB_KEY_XF86Switch_VT_9 */ \
   OP(XKB_KEY_XF86Ungrab, LCTRL(LALT(Key_KeypadDivide))) /* XKB_KEY_XF86Ungrab, force ungrab                */ \
   OP(XKB_KEY_bracketleft, Key_RightBracket) \
   OP(XKB_KEY_bracketright, Key_LeftBracket) \
   OP(XKB_KEY_equal, Key_Equals) \
   OP(XKB_KEY_greater, LSHIFT(Key_NonUsBackslashAndPipe)) \
   OP(XKB_KEY_hebrew_aleph, Key_T) \
   OP(XKB_KEY_hebrew_ayin, Key_G) \
   OP(XKB_KEY_hebrew_bet, Key_C) /* XKB_KEY_hebrew_beth, deprecated  */ \
   OP(XKB_KEY_hebrew_chet, Key_J) /* XKB_KEY_hebrew_het, deprecated  */ \
   OP(XKB_KEY_hebrew_dalet, Key_S) /* XKB_KEY_hebrew_daleth, deprecated  */ \
   OP(XKB_KEY_hebrew_finalkaph, Key_L) \
   OP(XKB_KEY_hebrew_finalmem, Key_O) \
   OP(XKB_KEY_hebrew_finalnun, Key_I) \
   OP(XKB_KEY_hebrew_finalpe, Key_Semicolon) \
   OP(XKB_KEY_hebrew_finalzade, Key_Period) /* XKB_KEY_hebrew_finalzadi, deprecated  */ \
   OP(XKB_KEY_hebrew_gimel, Key_D) /* XKB_KEY_hebrew_gimmel, deprecated  */ \
   OP(XKB_KEY_hebrew_he, Key_V) \
   OP(XKB_KEY_hebrew_kaph, Key_F) \
   OP(XKB_KEY_hebrew_lamed, Key_K) \
   OP(XKB_KEY_hebrew_mem, Key_N) \
   OP(XKB_KEY_hebrew_nun, Key_B) \
   OP(XKB_KEY_hebrew_pe, Key_P) \
   OP(XKB_KEY_hebrew_qoph, Key_E) /* XKB_KEY_hebrew_kuf, deprecated  */ \
   OP(XKB_KEY_hebrew_resh, Key_R) \
   OP(XKB_KEY_hebrew_samech, Key_X) /* XKB_KEY_hebrew_samekh, deprecated  */ \
   OP(XKB_KEY_hebrew_shin, Key_A) \
   OP(XKB_KEY_hebrew_taw, Key_Comma) /* XKB_KEY_hebrew_taf, deprecated  */ \
   OP(XKB_KEY_hebrew_tet, Key_Y) /* XKB_KEY_hebrew_teth, deprecated  */ \
   OP(XKB_KEY_hebrew_waw, Key_U) \
   OP(XKB_KEY_hebrew_yod, Key_H) \
   OP(XKB_KEY_hebrew_zade, Key_M) /* XKB_KEY_hebrew_zadi, deprecated  */ \
   OP(XKB_KEY_hebrew_zain, Key_Z) /* XKB_KEY_hebrew_zayin, deprecated  */ \
   OP(XKB_KEY_less, Key_NonUsBackslashAndPipe) \
   OP(XKB_KEY_space, Key_Spacebar) \


namespace kaleidoscope {
namespace host_keymap {
namespace linux {
namespace il {
namespace biblical {

HOST_KEYMAP_LINUX(
  _HOST_KEYMAP_ASCII,
  _HOST_KEYMAP_UNICODE,
  _HOST_KEYMAP_NON_PRINTABLE
)

} // namespace biblical
} // namespace il
} // namespace linux
} // namespace host_keymap
} // namespace kaleidoscope

#undef _HOST_KEYMAP_ASCII
#undef _HOST_KEYMAP_UNICODE
#undef _HOST_KEYMAP_NON_PRINTABLE

