/* Kaleidoscope - Firmware for computer input devices
 * Copyright (C) 2013-2019  Keyboard.io, Inc.
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "kaleidoscope/host_keymap/linux.h"

// This file was autogenerated by host_keymap.
// Its content is based on information provided by the XKB X11 system
// collected with the extraordinary libxkbcommon.

// layout: cz
// variant: ucw

#define _HOST_KEYMAP_ASCII(OP) \
   OP('\b', Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP('\t', Key_Tab) /* XKB_KEY_Tab */ \
   OP('\r', Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP('\e', Key_Escape) /* XKB_KEY_Escape */ \
   OP(' ', Key_Spacebar) /* U+0020, XKB_KEY_space, SPACE */ \
   OP('*', Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP('+', Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP('-', Key_KeypadSubtract) /* XKB_KEY_KP_Subtract */ \
   OP('.', LSHIFT(Key_KeypadDot)) /* XKB_KEY_KP_Decimal */ \
   OP('/', Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP('0', LSHIFT(Key_Keypad0)) /* XKB_KEY_KP_0 */ \
   OP('1', LSHIFT(Key_Keypad1)) /* XKB_KEY_KP_1 */ \
   OP('2', LSHIFT(Key_Keypad2)) /* XKB_KEY_KP_2 */ \
   OP('3', LSHIFT(Key_Keypad3)) /* XKB_KEY_KP_3 */ \
   OP('4', LSHIFT(Key_Keypad4)) /* XKB_KEY_KP_4 */ \
   OP('5', LSHIFT(Key_Keypad5)) /* XKB_KEY_KP_5 */ \
   OP('6', LSHIFT(Key_Keypad6)) /* XKB_KEY_KP_6 */ \
   OP('7', LSHIFT(Key_Keypad7)) /* XKB_KEY_KP_7 */ \
   OP('8', LSHIFT(Key_Keypad8)) /* XKB_KEY_KP_8 */ \
   OP('9', LSHIFT(Key_Keypad9)) /* XKB_KEY_KP_9 */ \
   OP('<', Key_NonUsBackslashAndPipe) /* U+003c, XKB_KEY_less, LESS-THAN SIGN */ \
   OP('>', LSHIFT(Key_NonUsBackslashAndPipe)) /* U+003e, XKB_KEY_greater, GREATER-THAN SIGN */ \
   OP('\\', Key_NonUsPound) /* U+005c, XKB_KEY_backslash, REVERSE SOLIDUS */ \
   OP('|', LSHIFT(Key_NonUsPound)) /* U+007c, XKB_KEY_bar, VERTICAL LINE */ \
   OP('', Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \

#define _HOST_KEYMAP_UNICODE(OP) \
   OP(L'\b', Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP(L'\t', Key_Tab) /* XKB_KEY_Tab */ \
   OP(L'\r', Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP(L'\e', Key_Escape) /* XKB_KEY_Escape */ \
   OP(L' ', Key_Spacebar) /* U+0020, XKB_KEY_space, SPACE */ \
   OP(L'*', Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP(L'+', Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(L'-', Key_KeypadSubtract) /* XKB_KEY_KP_Subtract */ \
   OP(L'.', LSHIFT(Key_KeypadDot)) /* XKB_KEY_KP_Decimal */ \
   OP(L'/', Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP(L'0', LSHIFT(Key_Keypad0)) /* XKB_KEY_KP_0 */ \
   OP(L'1', LSHIFT(Key_Keypad1)) /* XKB_KEY_KP_1 */ \
   OP(L'2', LSHIFT(Key_Keypad2)) /* XKB_KEY_KP_2 */ \
   OP(L'3', LSHIFT(Key_Keypad3)) /* XKB_KEY_KP_3 */ \
   OP(L'4', LSHIFT(Key_Keypad4)) /* XKB_KEY_KP_4 */ \
   OP(L'5', LSHIFT(Key_Keypad5)) /* XKB_KEY_KP_5 */ \
   OP(L'6', LSHIFT(Key_Keypad6)) /* XKB_KEY_KP_6 */ \
   OP(L'7', LSHIFT(Key_Keypad7)) /* XKB_KEY_KP_7 */ \
   OP(L'8', LSHIFT(Key_Keypad8)) /* XKB_KEY_KP_8 */ \
   OP(L'9', LSHIFT(Key_Keypad9)) /* XKB_KEY_KP_9 */ \
   OP(L'<', Key_NonUsBackslashAndPipe) /* U+003c, XKB_KEY_less, LESS-THAN SIGN */ \
   OP(L'>', LSHIFT(Key_NonUsBackslashAndPipe)) /* U+003e, XKB_KEY_greater, GREATER-THAN SIGN */ \
   OP(L'\\', Key_NonUsPound) /* U+005c, XKB_KEY_backslash, REVERSE SOLIDUS */ \
   OP(L'|', LSHIFT(Key_NonUsPound)) /* U+007c, XKB_KEY_bar, VERTICAL LINE */ \
   OP(L'', Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \
   OP(L'Á', LSHIFT(Key_A)) /* U+00c1, XKB_KEY_Aacute, LATIN CAPITAL LETTER A WITH ACUTE */ \
   OP(L'Ä', LSHIFT(Key_Q)) /* U+00c4, XKB_KEY_Adiaeresis, LATIN CAPITAL LETTER A WITH DIAERESIS */ \
   OP(L'Ç', LSHIFT(Key_V)) /* U+00c7, XKB_KEY_Ccedilla, LATIN CAPITAL LETTER C WITH CEDILLA */ \
   OP(L'É', LSHIFT(Key_E)) /* U+00c9, XKB_KEY_Eacute, LATIN CAPITAL LETTER E WITH ACUTE */ \
   OP(L'Ë', LSHIFT(Key_F)) /* U+00cb, XKB_KEY_Ediaeresis, LATIN CAPITAL LETTER E WITH DIAERESIS */ \
   OP(L'Í', LSHIFT(Key_I)) /* U+00cd, XKB_KEY_Iacute, LATIN CAPITAL LETTER I WITH ACUTE */ \
   OP(L'Ñ', LSHIFT(Key_B)) /* U+00d1, XKB_KEY_Ntilde, LATIN CAPITAL LETTER N WITH TILDE */ \
   OP(L'Ó', LSHIFT(Key_O)) /* U+00d3, XKB_KEY_Oacute, LATIN CAPITAL LETTER O WITH ACUTE */ \
   OP(L'Ô', LSHIFT(Key_K)) /* U+00d4, XKB_KEY_Ocircumflex, LATIN CAPITAL LETTER O WITH CIRCUMFLEX */ \
   OP(L'Ö', LSHIFT(Key_P)) /* U+00d6, XKB_KEY_Odiaeresis, LATIN CAPITAL LETTER O WITH DIAERESIS */ \
   OP(L'Ú', LSHIFT(Key_H)) /* U+00da, XKB_KEY_Uacute, LATIN CAPITAL LETTER U WITH ACUTE */ \
   OP(L'Ü', LSHIFT(Key_J)) /* U+00dc, XKB_KEY_Udiaeresis, LATIN CAPITAL LETTER U WITH DIAERESIS */ \
   OP(L'Ý', LSHIFT(Key_Y)) /* U+00dd, XKB_KEY_Yacute, LATIN CAPITAL LETTER Y WITH ACUTE */ \
   OP(L'ß', Key_X) /* U+00df, XKB_KEY_ssharp, LATIN SMALL LETTER SHARP S */ \
   OP(L'á', Key_A) /* U+00e1, XKB_KEY_aacute, LATIN SMALL LETTER A WITH ACUTE */ \
   OP(L'ä', Key_Q) /* U+00e4, XKB_KEY_adiaeresis, LATIN SMALL LETTER A WITH DIAERESIS */ \
   OP(L'ç', Key_V) /* U+00e7, XKB_KEY_ccedilla, LATIN SMALL LETTER C WITH CEDILLA */ \
   OP(L'é', Key_E) /* U+00e9, XKB_KEY_eacute, LATIN SMALL LETTER E WITH ACUTE */ \
   OP(L'ë', Key_F) /* U+00eb, XKB_KEY_ediaeresis, LATIN SMALL LETTER E WITH DIAERESIS */ \
   OP(L'í', Key_I) /* U+00ed, XKB_KEY_iacute, LATIN SMALL LETTER I WITH ACUTE */ \
   OP(L'ñ', Key_B) /* U+00f1, XKB_KEY_ntilde, LATIN SMALL LETTER N WITH TILDE */ \
   OP(L'ó', Key_O) /* U+00f3, XKB_KEY_oacute, LATIN SMALL LETTER O WITH ACUTE */ \
   OP(L'ô', Key_K) /* U+00f4, XKB_KEY_ocircumflex, LATIN SMALL LETTER O WITH CIRCUMFLEX */ \
   OP(L'ö', Key_P) /* U+00f6, XKB_KEY_odiaeresis, LATIN SMALL LETTER O WITH DIAERESIS */ \
   OP(L'ú', Key_H) /* U+00fa, XKB_KEY_uacute, LATIN SMALL LETTER U WITH ACUTE */ \
   OP(L'ü', Key_J) /* U+00fc, XKB_KEY_udiaeresis, LATIN SMALL LETTER U WITH DIAERESIS */ \
   OP(L'ý', Key_Y) /* U+00fd, XKB_KEY_yacute, LATIN SMALL LETTER Y WITH ACUTE */ \
   OP(L'Č', LSHIFT(Key_C)) /* U+010c, XKB_KEY_Ccaron, LATIN CAPITAL LETTER C WITH CARON */ \
   OP(L'č', Key_C) /* U+010d, XKB_KEY_ccaron, LATIN SMALL LETTER C WITH CARON */ \
   OP(L'Ď', LSHIFT(Key_D)) /* U+010e, XKB_KEY_Dcaron, LATIN CAPITAL LETTER D WITH CARON */ \
   OP(L'ď', Key_D) /* U+010f, XKB_KEY_dcaron, LATIN SMALL LETTER D WITH CARON */ \
   OP(L'Ě', LSHIFT(Key_W)) /* U+011a, XKB_KEY_Ecaron, LATIN CAPITAL LETTER E WITH CARON */ \
   OP(L'ě', Key_W) /* U+011b, XKB_KEY_ecaron, LATIN SMALL LETTER E WITH CARON */ \
   OP(L'Ĺ', LSHIFT(Key_M)) /* U+0139, XKB_KEY_Lacute, LATIN CAPITAL LETTER L WITH ACUTE */ \
   OP(L'ĺ', Key_M) /* U+013a, XKB_KEY_lacute, LATIN SMALL LETTER L WITH ACUTE */ \
   OP(L'Ľ', LSHIFT(Key_L)) /* U+013d, XKB_KEY_Lcaron, LATIN CAPITAL LETTER L WITH CARON */ \
   OP(L'ľ', Key_L) /* U+013e, XKB_KEY_lcaron, LATIN SMALL LETTER L WITH CARON */ \
   OP(L'Ň', LSHIFT(Key_N)) /* U+0147, XKB_KEY_Ncaron, LATIN CAPITAL LETTER N WITH CARON */ \
   OP(L'ň', Key_N) /* U+0148, XKB_KEY_ncaron, LATIN SMALL LETTER N WITH CARON */ \
   OP(L'Ŕ', LSHIFT(Key_G)) /* U+0154, XKB_KEY_Racute, LATIN CAPITAL LETTER R WITH ACUTE */ \
   OP(L'ŕ', Key_G) /* U+0155, XKB_KEY_racute, LATIN SMALL LETTER R WITH ACUTE */ \
   OP(L'Ř', LSHIFT(Key_R)) /* U+0158, XKB_KEY_Rcaron, LATIN CAPITAL LETTER R WITH CARON */ \
   OP(L'ř', Key_R) /* U+0159, XKB_KEY_rcaron, LATIN SMALL LETTER R WITH CARON */ \
   OP(L'Š', LSHIFT(Key_S)) /* U+0160, XKB_KEY_Scaron, LATIN CAPITAL LETTER S WITH CARON */ \
   OP(L'š', Key_S) /* U+0161, XKB_KEY_scaron, LATIN SMALL LETTER S WITH CARON */ \
   OP(L'Ť', LSHIFT(Key_T)) /* U+0164, XKB_KEY_Tcaron, LATIN CAPITAL LETTER T WITH CARON */ \
   OP(L'ť', Key_T) /* U+0165, XKB_KEY_tcaron, LATIN SMALL LETTER T WITH CARON */ \
   OP(L'Ů', LSHIFT(Key_U)) /* U+016e, XKB_KEY_Uring, LATIN CAPITAL LETTER U WITH RING ABOVE */ \
   OP(L'ů', Key_U) /* U+016f, XKB_KEY_uring, LATIN SMALL LETTER U WITH RING ABOVE */ \
   OP(L'Ž', LSHIFT(Key_Z)) /* U+017d, XKB_KEY_Zcaron, LATIN CAPITAL LETTER Z WITH CARON */ \
   OP(L'ž', Key_Z) /* U+017e, XKB_KEY_zcaron, LATIN SMALL LETTER Z WITH CARON */ \

#define _HOST_KEYMAP_NON_PRINTABLE(OP) \
   OP(XKB_KEY_Aacute, LSHIFT(Key_A)) \
   OP(XKB_KEY_Adiaeresis, LSHIFT(Key_Q)) \
   OP(XKB_KEY_Alt_L, Key_LeftAlt) /* XKB_KEY_Alt_L, Left alt  */ \
   OP(XKB_KEY_Alt_R, Key_RightAlt) /* XKB_KEY_Alt_R, Right alt  */ \
   OP(XKB_KEY_BackSpace, Key_Backspace) /* XKB_KEY_BackSpace, Back space, back char  */ \
   OP(XKB_KEY_Break, LCTRL(Key_Pause)) /* XKB_KEY_Break */ \
   OP(XKB_KEY_Caps_Lock, Key_CapsLock) /* XKB_KEY_Caps_Lock, Caps lock  */ \
   OP(XKB_KEY_Ccaron, LSHIFT(Key_C)) \
   OP(XKB_KEY_Ccedilla, LSHIFT(Key_V)) \
   OP(XKB_KEY_Control_L, Key_LeftControl) /* XKB_KEY_Control_L, Left control  */ \
   OP(XKB_KEY_Control_R, Key_RightControl) /* XKB_KEY_Control_R, Right control  */ \
   OP(XKB_KEY_Dcaron, LSHIFT(Key_D)) \
   OP(XKB_KEY_Delete, Key_Delete) /* XKB_KEY_Delete, Delete, rubout  */ \
   OP(XKB_KEY_Down, Key_DownArrow) /* XKB_KEY_Down, Move down, down arrow  */ \
   OP(XKB_KEY_Eacute, LSHIFT(Key_E)) \
   OP(XKB_KEY_Ecaron, LSHIFT(Key_W)) \
   OP(XKB_KEY_Ediaeresis, LSHIFT(Key_F)) \
   OP(XKB_KEY_End, Key_End) /* XKB_KEY_End, EOL  */ \
   OP(XKB_KEY_Escape, Key_Escape) /* XKB_KEY_Escape */ \
   OP(XKB_KEY_F1, Key_F1) /* XKB_KEY_F1 */ \
   OP(XKB_KEY_F10, Key_F10) /* XKB_KEY_F10 */ \
   OP(XKB_KEY_F11, Key_F11) /* XKB_KEY_F11 */ \
   OP(XKB_KEY_F12, Key_F12) /* XKB_KEY_F12 */ \
   OP(XKB_KEY_F2, Key_F2) /* XKB_KEY_F2 */ \
   OP(XKB_KEY_F3, Key_F3) /* XKB_KEY_F3 */ \
   OP(XKB_KEY_F4, Key_F4) /* XKB_KEY_F4 */ \
   OP(XKB_KEY_F5, Key_F5) /* XKB_KEY_F5 */ \
   OP(XKB_KEY_F6, Key_F6) /* XKB_KEY_F6 */ \
   OP(XKB_KEY_F7, Key_F7) /* XKB_KEY_F7 */ \
   OP(XKB_KEY_F8, Key_F8) /* XKB_KEY_F8 */ \
   OP(XKB_KEY_F9, Key_F9) /* XKB_KEY_F9 */ \
   OP(XKB_KEY_Home, Key_Home) /* XKB_KEY_Home */ \
   OP(XKB_KEY_ISO_Left_Tab, LSHIFT(Key_Tab)) /* XKB_KEY_ISO_Left_Tab */ \
   OP(XKB_KEY_Iacute, LSHIFT(Key_I)) \
   OP(XKB_KEY_Insert, Key_Insert) /* XKB_KEY_Insert, Insert, insert here  */ \
   OP(XKB_KEY_KP_0, LSHIFT(Key_Keypad0)) /* XKB_KEY_KP_0 */ \
   OP(XKB_KEY_KP_1, LSHIFT(Key_Keypad1)) /* XKB_KEY_KP_1 */ \
   OP(XKB_KEY_KP_2, LSHIFT(Key_Keypad2)) /* XKB_KEY_KP_2 */ \
   OP(XKB_KEY_KP_3, LSHIFT(Key_Keypad3)) /* XKB_KEY_KP_3 */ \
   OP(XKB_KEY_KP_4, LSHIFT(Key_Keypad4)) /* XKB_KEY_KP_4 */ \
   OP(XKB_KEY_KP_5, LSHIFT(Key_Keypad5)) /* XKB_KEY_KP_5 */ \
   OP(XKB_KEY_KP_6, LSHIFT(Key_Keypad6)) /* XKB_KEY_KP_6 */ \
   OP(XKB_KEY_KP_7, LSHIFT(Key_Keypad7)) /* XKB_KEY_KP_7 */ \
   OP(XKB_KEY_KP_8, LSHIFT(Key_Keypad8)) /* XKB_KEY_KP_8 */ \
   OP(XKB_KEY_KP_9, LSHIFT(Key_Keypad9)) /* XKB_KEY_KP_9 */ \
   OP(XKB_KEY_KP_Add, Key_KeypadAdd) /* XKB_KEY_KP_Add */ \
   OP(XKB_KEY_KP_Begin, Key_Keypad5) /* XKB_KEY_KP_Begin */ \
   OP(XKB_KEY_KP_Decimal, LSHIFT(Key_KeypadDot)) /* XKB_KEY_KP_Decimal */ \
   OP(XKB_KEY_KP_Delete, Key_KeypadDot) /* XKB_KEY_KP_Delete */ \
   OP(XKB_KEY_KP_Divide, Key_KeypadDivide) /* XKB_KEY_KP_Divide */ \
   OP(XKB_KEY_KP_Down, Key_Keypad2) /* XKB_KEY_KP_Down */ \
   OP(XKB_KEY_KP_End, Key_Keypad1) /* XKB_KEY_KP_End */ \
   OP(XKB_KEY_KP_Enter, Key_KeypadEnter) /* XKB_KEY_KP_Enter, Enter  */ \
   OP(XKB_KEY_KP_Home, Key_Keypad7) /* XKB_KEY_KP_Home */ \
   OP(XKB_KEY_KP_Insert, Key_Keypad0) /* XKB_KEY_KP_Insert */ \
   OP(XKB_KEY_KP_Left, Key_Keypad4) /* XKB_KEY_KP_Left */ \
   OP(XKB_KEY_KP_Multiply, Key_KeypadMultiply) /* XKB_KEY_KP_Multiply */ \
   OP(XKB_KEY_KP_Next, Key_Keypad3) /* XKB_KEY_KP_Next */ \
   OP(XKB_KEY_KP_Prior, Key_Keypad9) /* XKB_KEY_KP_Prior */ \
   OP(XKB_KEY_KP_Right, Key_Keypad6) /* XKB_KEY_KP_Right */ \
   OP(XKB_KEY_KP_Subtract, Key_KeypadSubtract) /* XKB_KEY_KP_Subtract */ \
   OP(XKB_KEY_KP_Up, Key_Keypad8) /* XKB_KEY_KP_Up */ \
   OP(XKB_KEY_Lacute, LSHIFT(Key_M)) \
   OP(XKB_KEY_Lcaron, LSHIFT(Key_L)) \
   OP(XKB_KEY_Left, Key_LeftArrow) /* XKB_KEY_Left, Move left, left arrow  */ \
   OP(XKB_KEY_Menu, Key_PcApplication) /* XKB_KEY_Menu */ \
   OP(XKB_KEY_Meta_L, LSHIFT(Key_LeftAlt)) /* XKB_KEY_Meta_L, Left meta  */ \
   OP(XKB_KEY_Meta_R, LSHIFT(Key_RightAlt)) /* XKB_KEY_Meta_R, Right meta  */ \
   OP(XKB_KEY_Ncaron, LSHIFT(Key_N)) \
   OP(XKB_KEY_Next, Key_PageDown) /* XKB_KEY_Next, Next  */ \
   OP(XKB_KEY_Ntilde, LSHIFT(Key_B)) \
   OP(XKB_KEY_Num_Lock, Key_KeypadNumLock) /* XKB_KEY_Num_Lock */ \
   OP(XKB_KEY_Oacute, LSHIFT(Key_O)) \
   OP(XKB_KEY_Ocircumflex, LSHIFT(Key_K)) \
   OP(XKB_KEY_Odiaeresis, LSHIFT(Key_P)) \
   OP(XKB_KEY_Pause, Key_Pause) /* XKB_KEY_Pause, Pause, hold  */ \
   OP(XKB_KEY_Print, Key_PrintScreen) /* XKB_KEY_Print */ \
   OP(XKB_KEY_Prior, Key_PageUp) /* XKB_KEY_Prior, Prior, previous  */ \
   OP(XKB_KEY_Racute, LSHIFT(Key_G)) \
   OP(XKB_KEY_Rcaron, LSHIFT(Key_R)) \
   OP(XKB_KEY_Return, Key_Enter) /* XKB_KEY_Return, Return, enter  */ \
   OP(XKB_KEY_Right, Key_RightArrow) /* XKB_KEY_Right, Move right, right arrow  */ \
   OP(XKB_KEY_Scaron, LSHIFT(Key_S)) \
   OP(XKB_KEY_Scroll_Lock, Key_ScrollLock) /* XKB_KEY_Scroll_Lock */ \
   OP(XKB_KEY_Shift_L, Key_LeftShift) /* XKB_KEY_Shift_L, Left shift  */ \
   OP(XKB_KEY_Shift_R, Key_RightShift) /* XKB_KEY_Shift_R, Right shift  */ \
   OP(XKB_KEY_Super_L, Key_LeftGui) /* XKB_KEY_Super_L, Left super  */ \
   OP(XKB_KEY_Super_R, Key_RightGui) /* XKB_KEY_Super_R, Right super  */ \
   OP(XKB_KEY_Sys_Req, LALT(Key_PrintScreen)) /* XKB_KEY_Sys_Req */ \
   OP(XKB_KEY_Tab, Key_Tab) /* XKB_KEY_Tab */ \
   OP(XKB_KEY_Tcaron, LSHIFT(Key_T)) \
   OP(XKB_KEY_Uacute, LSHIFT(Key_H)) \
   OP(XKB_KEY_Udiaeresis, LSHIFT(Key_J)) \
   OP(XKB_KEY_Up, Key_UpArrow) /* XKB_KEY_Up, Move up, up arrow  */ \
   OP(XKB_KEY_Uring, LSHIFT(Key_U)) \
   OP(XKB_KEY_XF86ClearGrab, LCTRL(LALT(Key_KeypadMultiply))) /* XKB_KEY_XF86ClearGrab, kill application with grab  */ \
   OP(XKB_KEY_XF86Next_VMode, LCTRL(LALT(Key_KeypadAdd))) /* XKB_KEY_XF86Next_VMode, next video mode available   */ \
   OP(XKB_KEY_XF86Prev_VMode, LCTRL(LALT(Key_KeypadSubtract))) /* XKB_KEY_XF86Prev_VMode, prev. video mode available  */ \
   OP(XKB_KEY_XF86Switch_VT_1, LCTRL(LALT(Key_F1))) /* XKB_KEY_XF86Switch_VT_1 */ \
   OP(XKB_KEY_XF86Switch_VT_10, LCTRL(LALT(Key_F10))) /* XKB_KEY_XF86Switch_VT_10 */ \
   OP(XKB_KEY_XF86Switch_VT_11, LCTRL(LALT(Key_F11))) /* XKB_KEY_XF86Switch_VT_11 */ \
   OP(XKB_KEY_XF86Switch_VT_12, LCTRL(LALT(Key_F12))) /* XKB_KEY_XF86Switch_VT_12 */ \
   OP(XKB_KEY_XF86Switch_VT_2, LCTRL(LALT(Key_F2))) /* XKB_KEY_XF86Switch_VT_2 */ \
   OP(XKB_KEY_XF86Switch_VT_3, LCTRL(LALT(Key_F3))) /* XKB_KEY_XF86Switch_VT_3 */ \
   OP(XKB_KEY_XF86Switch_VT_4, LCTRL(LALT(Key_F4))) /* XKB_KEY_XF86Switch_VT_4 */ \
   OP(XKB_KEY_XF86Switch_VT_5, LCTRL(LALT(Key_F5))) /* XKB_KEY_XF86Switch_VT_5 */ \
   OP(XKB_KEY_XF86Switch_VT_6, LCTRL(LALT(Key_F6))) /* XKB_KEY_XF86Switch_VT_6 */ \
   OP(XKB_KEY_XF86Switch_VT_7, LCTRL(LALT(Key_F7))) /* XKB_KEY_XF86Switch_VT_7 */ \
   OP(XKB_KEY_XF86Switch_VT_8, LCTRL(LALT(Key_F8))) /* XKB_KEY_XF86Switch_VT_8 */ \
   OP(XKB_KEY_XF86Switch_VT_9, LCTRL(LALT(Key_F9))) /* XKB_KEY_XF86Switch_VT_9 */ \
   OP(XKB_KEY_XF86Ungrab, LCTRL(LALT(Key_KeypadDivide))) /* XKB_KEY_XF86Ungrab, force ungrab                */ \
   OP(XKB_KEY_Yacute, LSHIFT(Key_Y)) \
   OP(XKB_KEY_Zcaron, LSHIFT(Key_Z)) \
   OP(XKB_KEY_aacute, Key_A) \
   OP(XKB_KEY_adiaeresis, Key_Q) \
   OP(XKB_KEY_backslash, Key_NonUsPound) \
   OP(XKB_KEY_bar, LSHIFT(Key_NonUsPound)) \
   OP(XKB_KEY_ccaron, Key_C) \
   OP(XKB_KEY_ccedilla, Key_V) \
   OP(XKB_KEY_dcaron, Key_D) \
   OP(XKB_KEY_eacute, Key_E) \
   OP(XKB_KEY_ecaron, Key_W) \
   OP(XKB_KEY_ediaeresis, Key_F) \
   OP(XKB_KEY_greater, LSHIFT(Key_NonUsBackslashAndPipe)) \
   OP(XKB_KEY_iacute, Key_I) \
   OP(XKB_KEY_lacute, Key_M) \
   OP(XKB_KEY_lcaron, Key_L) \
   OP(XKB_KEY_less, Key_NonUsBackslashAndPipe) \
   OP(XKB_KEY_ncaron, Key_N) \
   OP(XKB_KEY_ntilde, Key_B) \
   OP(XKB_KEY_oacute, Key_O) \
   OP(XKB_KEY_ocircumflex, Key_K) \
   OP(XKB_KEY_odiaeresis, Key_P) \
   OP(XKB_KEY_racute, Key_G) \
   OP(XKB_KEY_rcaron, Key_R) \
   OP(XKB_KEY_scaron, Key_S) \
   OP(XKB_KEY_space, Key_Spacebar) \
   OP(XKB_KEY_ssharp, Key_X) \
   OP(XKB_KEY_tcaron, Key_T) \
   OP(XKB_KEY_uacute, Key_H) \
   OP(XKB_KEY_udiaeresis, Key_J) \
   OP(XKB_KEY_uring, Key_U) \
   OP(XKB_KEY_yacute, Key_Y) \
   OP(XKB_KEY_zcaron, Key_Z) \


namespace kaleidoscope {
namespace host_keymap {
namespace linux {
namespace cz {
namespace ucw {

HOST_KEYMAP_LINUX(
  _HOST_KEYMAP_ASCII,
  _HOST_KEYMAP_UNICODE,
  _HOST_KEYMAP_NON_PRINTABLE
)

} // namespace ucw
} // namespace cz
} // namespace linux
} // namespace host_keymap
} // namespace kaleidoscope

#undef _HOST_KEYMAP_ASCII
#undef _HOST_KEYMAP_UNICODE
#undef _HOST_KEYMAP_NON_PRINTABLE

